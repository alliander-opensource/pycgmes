@base          <http://iec.ch/TC57/ns/CIM/SteadyStateHypothesis-EU/constraints/IEC61970-301/3.0> .
@prefix eu:    <http://iec.ch/TC57/CIM100-European#> .
@prefix cims:  <http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix cim:   <http://iec.ch/TC57/CIM100#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dash:  <http://datashapes.org/dash#> .
@prefix sshu: <http://iec.ch/TC57/ns/CIM/SteadyStateHypothesis-EU/constraints/IEC61970-301/3.0#> .
@prefix dct:    <http://purl.org/dc/terms/> .
@prefix dcat:    <http://www.w3.org/ns/dcat#> .


sshu:Ontology  rdf:type         owl:Ontology ;
        dct:conformsTo        "urn:iso:std:iec:61970-501:draft:ed-2" , "urn:iso:std:iec:61970-600-2:ed-1" , "urn:iso:std:iec:61970-301:ed-7:amd1" , "file://iec61970cim17v40_iec61968cim13v13a_iec62325cim03v17a.eap" ;
        dct:creator           "ENTSO-E CIM EG"@en ;
        dct:description       "The constraints for SSH from UML."@en ;
        dct:identifier        "urn:uuid:1c48362c-e245-4660-a50e-8f5c714237da" ;
        dct:issued            "2021-10-19T12:09:21Z"^^xsd:dateTime ;
        dct:language          "en-GB" ;
        dct:modified          "2020-10-19"^^xsd:date ;
        dct:publisher         "ENTSO-E"@en ;
        dct:rights            "Copyright"@en ;
        dct:rightsHolder      "ENTSO-E"@en ;
        dct:title             "SSH UML Constraints"@en ;
        owl:versionIRI        <http://iec.ch/TC57/ns/CIM/SteadyStateHypothesis-EU/constraints/IEC61970-301/3.0> ;
        owl:versionInfo       "3.0.0"@en ;
        dcat:landingPage      "https://www.entsoe.eu/digital/cim/cim-for-grid-models-exchange/" ;
        dcat:theme            "constraints"@en .
        
        
cim:    
    a           owl:Ontology ;
    owl:imports sh: ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100#"^^xsd:anyURI ;
        sh:prefix "cim" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
        sh:prefix "rdf" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100-European#"^^xsd:anyURI ;
        sh:prefix "eu" ;
    ] .

sshu:VsConverter.droopCompensation-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:VsConverter.droopCompensation:valueRange" ;
        sh:order         18 ;
        sh:path          cim:VsConverter.droopCompensation ;
        sh:severity      sh:Violation .

sshu:RegulatingControl
        a               sh:NodeShape ;
        sh:property     sshu:RegulatingControl.targetDeadband-valueRange , sshu:RegulatingControl.targetDeadband-applicability;
        sh:targetClass  cim:RegulatingControl .

sshu:TapChangerControl
        a               sh:NodeShape ;
        sh:property     sshu:RegulatingControl.targetDeadband-valueRange , sshu:RegulatingControl.targetDeadband-applicability ;
        sh:targetClass  cim:TapChangerControl .

sshu:VsConverter  a    sh:NodeShape ;
        sh:property     sshu:VsConverter.droop-valueRange , sshu:VsConverter.targetPWMfactor-valueRange , sshu:VsConverter.targetPowerFactorPcc-valueRange , sshu:VsConverter.targetUpcc-valueRange , sshu:ACDCConverter.targetUdc-valueRange , sshu:VsConverter.qShare-valueRange , sshu:VsConverter.targetPhasePcc-valueRange , sshu:VsConverter.droopCompensation-valueRange , sshu:VsConverter.pPccControl-targetValuephasePcc , sshu:VsConverter.pPccControl-targetValuePpcc , sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroop , sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopPilot , sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopWithCompensation , sshu:VsConverter.pPccControl-targetValueUdc , sshu:VsConverter.qPccControl-targetValuepowerFactorPcc , sshu:VsConverter.qPccControl-targetValuepulseWidthModulation , sshu:VsConverter.qPccControl-targetValuereactivePcc , sshu:VsConverter.qPccControl-targetValuevoltagePcc;
        sh:targetClass  cim:VsConverter .

sshu:BatteryUnit  a    sh:NodeShape ;
        sh:property     sshu:BatteryUnit.storedE-valueRange ;
        sh:targetClass  cim:BatteryUnit .

sshu:ApparentPowerLimit
        a               sh:NodeShape ;
        sh:property     sshu:ApparentPowerLimit.value-valueRange ;
        sh:targetClass  cim:ApparentPowerLimit .

sshu:SolarGeneratingUnit
        a               sh:NodeShape ;
        sh:property     sshu:GeneratingUnit.normalPF-valueRange ;
        sh:targetClass  cim:SolarGeneratingUnit .

sshu:ApparentPowerLimit.value-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:ApparentPowerLimit.value:valueRange" ;
        sh:order         3 ;
        sh:path          cim:ApparentPowerLimit.value ;
        sh:severity      sh:Violation .

sshu:VoltageLimit.value-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:VoltageLimit.value:valueRange" ;
        sh:order         16 ;
        sh:path          cim:VoltageLimit.value ;
        sh:severity      sh:Violation .

sshu:VsConverter.droop-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:VsConverter.droop:valueRange" ;
        sh:order         17 ;
        sh:path          cim:VsConverter.droop ;
        sh:severity      sh:Violation .

sshu:CsConverter.targetAlpha-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:CsConverter.targetAlpha:valueRange" ;
        sh:order         6 ;
        sh:path          cim:CsConverter.targetAlpha ;
        sh:severity      sh:Violation .

sshu:ActivePowerLimit.value-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:ActivePowerLimit.value:valueRange" ;
        sh:order         2 ;
        sh:path          cim:ActivePowerLimit.value ;
        sh:severity      sh:Violation .

sshu:CurrentLimit  a   sh:NodeShape ;
        sh:property     sshu:CurrentLimit.value-valueRange ;
        sh:targetClass  cim:CurrentLimit .

sshu:ControlArea  a    sh:NodeShape ;
        sh:property     sshu:ControlArea.pTolerance-valueRange ;
        sh:targetClass  cim:ControlArea .

sshu:VsConverter.qShare-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:VsConverter.qShare:valueRange" ;
        sh:order         19 ;
        sh:path          cim:VsConverter.qShare ;
        sh:severity      sh:Violation .

sshu:GeneratingUnit.normalPF-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:GeneratingUnit.normalPF:valueRange" ;
        sh:order         13 ;
        sh:path          cim:GeneratingUnit.normalPF ;
        sh:severity      sh:Violation .

sshu:EquivalentInjection
        a               sh:NodeShape ;
        sh:property     sshu:EquivalentInjection.regulationTarget-valueRange ;
        sh:targetClass  cim:EquivalentInjection .

sshu:BatteryUnit.storedE-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero and lower than BatteryUnit.ratedE." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:BatteryUnit.storedE:valueRange" ;
        sh:order         4 ;
        sh:path          cim:BatteryUnit.storedE ;
        sh:severity      sh:Violation .

sshu:EnergySource  a   sh:NodeShape ;
        sh:property     sshu:EnergySource.voltageMagnitude-valueRange , sshu:EnergySource.voltageAngle-valueRange , sshu:EnergySource.activePower-consumer ;
        sh:targetClass  cim:EnergySource .

sshu:GeneratingUnit  a  sh:NodeShape ;
        sh:property     sshu:GeneratingUnit.normalPF-valueRange ;
        sh:targetClass  cim:GeneratingUnit .

sshu:CsConverter.targetIdc-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:CsConverter.targetIdc:valueRange" ;
        sh:order         8 ;
        sh:path          cim:CsConverter.targetIdc ;
        sh:severity      sh:Violation .

sshu:HydroGeneratingUnit
        a               sh:NodeShape ;
        sh:property     sshu:GeneratingUnit.normalPF-valueRange ;
        sh:targetClass  cim:HydroGeneratingUnit .

sshu:ValueConstraintsGroup
        a           sh:PropertyGroup ;
        rdfs:label  "ValueConstraints" ;
        sh:order    0 .

sshu:ACDCConverter.targetUdc-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:ACDCConverter.targetUdc:valueRange" ;
        sh:order         1 ;
        sh:path          cim:ACDCConverter.targetUdc ;
        sh:severity      sh:Violation .

sshu:VsConverter.targetPowerFactorPcc-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:VsConverter.targetPowerFactorPcc:valueRange" ;
        sh:order         21 ;
        sh:path          cim:VsConverter.targetPowerFactorPcc ;
        sh:severity      sh:Violation .

sshu:NonlinearShuntCompensator
        a               sh:NodeShape ;
        sh:property     sshu:ShuntCompensator.sections-valueRange ;
        sh:targetClass  cim:NonlinearShuntCompensator .

sshu:VsConverter.targetPWMfactor-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:VsConverter.targetPWMfactor:valueRange" ;
        sh:order         22 ;
        sh:path          cim:VsConverter.targetPWMfactor ;
        sh:severity      sh:Violation .

sshu:CurrentLimit.value-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:CurrentLimit.value:valueRange" ;
        sh:order         9 ;
        sh:path          cim:CurrentLimit.value ;
        sh:severity      sh:Violation .

sshu:EnergySource.voltageMagnitude-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:EnergySource.voltageMagnitude:valueRange" ;
        sh:order         11 ;
        sh:path          cim:EnergySource.voltageMagnitude ;
        sh:severity      sh:Violation .

sshu:CsConverter.targetGamma-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:CsConverter.targetGamma:valueRange" ;
        sh:order         7 ;
        sh:path          cim:CsConverter.targetGamma ;
        sh:severity      sh:Violation .

sshu:LinearShuntCompensator
        a               sh:NodeShape ;
        sh:property     sshu:ShuntCompensator.sections-valueRange ;
        sh:targetClass  cim:LinearShuntCompensator .

sshu:EquivalentInjection.regulationTarget-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:EquivalentInjection.regulationTarget:valueRange" ;
        sh:order         12 ;
        sh:path          cim:EquivalentInjection.regulationTarget ;
        sh:severity      sh:Violation .

sshu:RegulatingControl.targetDeadband-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:RegulatingControl.targetDeadband:valueRange" ;
        sh:order         14 ;
        sh:path          cim:RegulatingControl.targetDeadband ;
        sh:severity      sh:Violation .

sshu:EnergySource.voltageAngle-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:EnergySource.voltageAngle:valueRange" ;
        sh:order         10 ;
        sh:path          cim:EnergySource.voltageAngle ;
        sh:severity      sh:Violation .

sshu:CsConverter  a    sh:NodeShape ;
        sh:property     sshu:CsConverter.targetIdc-valueRange , sshu:CsConverter.targetGamma-valueRange , sshu:CsConverter.targetAlpha-valueRange , sshu:ACDCConverter.targetUdc-valueRange , sshu:CsConverter.pPccControl-targetValuePpcc , sshu:CsConverter.pPccControl-targetValueIdc , sshu:CsConverter.pPccControl-targetValueUdc , sshu:CsConverter.maxAlpha-valueRangeTypical , sshu:CsConverter.minAlpha-valueRangeTypical , sshu:CsConverter.maxGamma-valueRangeTypical , sshu:CsConverter.minGamma-valueRangeTypical ;
        sh:targetClass  cim:CsConverter .
        
sshu:CsConverter.maxAlpha-valueRangeTypical
        a                sh:PropertyShape ;
        sh:description   "The attributes minAlpha and maxAlpha define the range of firing angles for rectifier operation between which no discrete tap changer action takes place. The range is typically 10-18 degrees." ;
        sh:sparql       sshu:CsConverter.maxAlpha-valueRangeTypicalSparql ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:name          "C:301:EQ:CsConverter.maxAlpha:valueRangeTypical" ;
        sh:order         19 ;
        sh:path          cim:CsConverter.maxAlpha ;
        sh:severity      sh:Warning .

sshu:CsConverter.maxAlpha-valueRangeTypicalSparql
		a         sh:SPARQLConstraint ;  
		sh:message       "The value is greater than 18." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this cim:CsConverter.operatingMode cim:CsOperatingModeKind.rectifier .
        $this $PATH ?value .
        FILTER (?value>18) .        
			}""" .        
        
sshu:CsConverter.minAlpha-valueRangeTypical
        a                    sh:PropertyShape ;
        sh:description       "The attributes minAlpha and maxAlpha define the range of firing angles for rectifier operation between which no discrete tap changer action takes place. The range is typically 10-18 degrees." ;
        sh:group             sshu:ValueConstraintsGroup ;
        sh:sparql            sshu:CsConverter.minAlpha-valueRangeTypicalSparql ;
        sh:name              "C:301:SV:CsConverter.minAlpha:valueRangeTypical" ;
        sh:order             18 ;
        sh:path              cim:CsConverter.minAlpha ;
        sh:severity          sh:Warning .

sshu:CsConverter.minAlpha-valueRangeTypicalSparql
		a         sh:SPARQLConstraint ;  
    sh:message           "The value is less than 10 or greater than CsConverter.maxAlpha" ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this cim:CsConverter.operatingMode cim:CsOperatingModeKind.rectifier .
        $this $PATH ?value .
        OPTIONAL {$this cim:CsConverter.maxAlpha ?maxalpha} .
        FILTER (?value<10 || ?value>?maxalpha) .        
			}""" .         

sshu:CsConverter.maxGamma-valueRangeTypical
        a                sh:PropertyShape ;
        sh:description   "The attributes minGamma and maxGamma define the range of extinction angles for inverter operation between which no discrete tap changer action takes place. The range is typically 17-20 degrees." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:sparql        sshu:CsConverter.maxGamma-valueRangeTypicalSparql ;
        sh:name          "C:301:EQ:CsConverter.maxGamma:valueRangeTypical" ;
        sh:order         21 ;
        sh:path          cim:CsConverter.maxGamma ;
        sh:severity      sh:Warning .
        
sshu:CsConverter.maxGamma-valueRangeTypicalSparql
		a         sh:SPARQLConstraint ;  
    sh:message       "The value is greater than 20." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this cim:CsConverter.operatingMode cim:CsOperatingModeKind.inverter .
        $this $PATH ?value .
        FILTER (?value>20) .        
			}""" .        

sshu:CsConverter.minGamma-valueRangeTypical
        a                    sh:PropertyShape ;
        sh:description       "The attributes minGamma and maxGamma define the range of extinction angles for inverter operation between which no discrete tap changer action takes place. The range is typically 17-20 degrees." ;
        sh:group             sshu:ValueConstraintsGroup ;
        sh:sparql            sshu:CsConverter.minGamma-valueRangeTypicalSparql ;
        sh:name              "C:301:SV:CsConverter.minGamma:valueRangeTypical" ;
        sh:order             20 ;
        sh:path              cim:CsConverter.minGamma ;
        sh:severity          sh:Warning .   

sshu:CsConverter.minGamma-valueRangeTypicalSparql
		a         sh:SPARQLConstraint ;  
    sh:message           "The value is less than 17 or greater than CsConverter.maxGamma" ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this cim:CsConverter.operatingMode cim:CsOperatingModeKind.inverter .
        $this $PATH ?value .
        OPTIONAL {$this cim:CsConverter.maxGamma ?maxgamma} .
        FILTER (?value<17 || ?value>?maxgamma) .        
			}""" .        

sshu:ShuntCompensator.sections-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero. " ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:ShuntCompensator.sections:valueRange" ;
        sh:order         15 ;
        sh:path          cim:ShuntCompensator.sections ;
        sh:severity      sh:Violation .

sshu:VoltageLimit  a   sh:NodeShape ;
        sh:property     sshu:VoltageLimit.value-valueRange ;
        sh:targetClass  cim:VoltageLimit .

sshu:VsConverter.targetPhasePcc-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:VsConverter.targetPhasePcc:valueRange" ;
        sh:order         20 ;
        sh:path          cim:VsConverter.targetPhasePcc ;
        sh:severity      sh:Violation .

sshu:ThermalGeneratingUnit
        a               sh:NodeShape ;
        sh:property     sshu:GeneratingUnit.normalPF-valueRange ;
        sh:targetClass  cim:ThermalGeneratingUnit .

sshu:NuclearGeneratingUnit
        a               sh:NodeShape ;
        sh:property     sshu:GeneratingUnit.normalPF-valueRange ;
        sh:targetClass  cim:NuclearGeneratingUnit .

sshu:VsConverter.targetUpcc-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:VsConverter.targetUpcc:valueRange" ;
        sh:order         23 ;
        sh:path          cim:VsConverter.targetUpcc ;
        sh:severity      sh:Violation .

sshu:WindGeneratingUnit
        a               sh:NodeShape ;
        sh:property     sshu:GeneratingUnit.normalPF-valueRange ;
        sh:targetClass  cim:WindGeneratingUnit .

sshu:ControlArea.pTolerance-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value or zero." ;
        sh:group         sshu:ValueConstraintsGroup ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:301:SSH:ControlArea.pTolerance:valueRange" ;
        sh:order         5 ;
        sh:path          cim:ControlArea.pTolerance ;
        sh:severity      sh:Violation .

sshu:ActivePowerLimit
        a               sh:NodeShape ;
        sh:property     sshu:ActivePowerLimit.value-valueRange ;
        sh:targetClass  cim:ActivePowerLimit .

sshu:CsConverter.pPccControl-targetValuePpcc
        a               sh:PropertyShape ;
        sh:sparql       sshu:CsConverter.pPccControl-targetValuePpccSparql ;
        sh:description  "Target is provided by ACDCConverter.targetPpcc." ;
        sh:name         "C:301:SSH:CsPpccControlKind.activePower:targetValuePpcc" ;
        sh:path         cim:CsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        24 ;
        sh:severity     sh:Violation .
        
    
sshu:CsConverter.pPccControl-targetValuePpccSparql
		a         sh:SPARQLConstraint ;  
		sh:message "ACDCConverter.targetPpcc is not provided for a converter with CsPpccControlKind.activePower." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:ACDCConverter.targetPpcc ?targetppcc}.
        FILTER (!bound(?targetppcc) && ?value=cim:CsPpccControlKind.activePower) .        
			}""" .
      

sshu:CsConverter.pPccControl-targetValueIdc
        a               sh:PropertyShape ;
        sh:sparql       sshu:CsConverter.pPccControl-targetValueIdcSparql ;
        sh:description  "Control is DC current  with target value provided by CsConverter.targetIdc." ;
        sh:name         "C:301:SSH:CsPpccControlKind.dcCurrent:targetValueIdc" ;
        sh:path         cim:CsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        25 ;
        sh:severity     sh:Violation .
        
    
sshu:CsConverter.pPccControl-targetValueIdcSparql
		a         sh:SPARQLConstraint ;  
		sh:message "CsConverter.targetIdc is not provided for a converter with CsPpccControlKind.dcCurrent." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:CsConverter.targetIdc ?targetidc}.
        FILTER (!bound(?targetidc) && ?value=cim:CsPpccControlKind.dcCurrent) .        
			}""" .  

sshu:CsConverter.pPccControl-targetValueUdc
        a               sh:PropertyShape ;
        sh:sparql       sshu:CsConverter.pPccControl-targetValueUdcSparql ;
        sh:description  "Control is DC voltage  with target value provided by ACDCConverter.targetUdc." ;
        sh:name         "C:301:SSH:CsPpccControlKind.dcVoltage:targetValueUdc" ;
        sh:path         cim:CsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        26 ;
        sh:severity     sh:Violation .
        
    
sshu:CsConverter.pPccControl-targetValueUdcSparql
		a         sh:SPARQLConstraint ;  
		sh:message "ACDCConverter.targetUdc is not provided for a converter with CsPpccControlKind.dcVoltage." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:ACDCConverter.targetUdc ?targetudc}.
        FILTER (!bound(?targetudc) && ?value=cim:CsPpccControlKind.dcVoltage) .        
			}""" .      
      

sshu:VsConverter.pPccControl-targetValuephasePcc
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.pPccControl-targetValuephasePccSparql ;
        sh:description  "Control is phase at point of common coupling. Target is provided by VsConverter.targetPhasePcc." ;
        sh:name         "C:301:SSH:VsPpccControlKind.phasePcc:targetValuephasePcc" ;
        sh:path         cim:VsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        27 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.pPccControl-targetValuephasePccSparql
		a         sh:SPARQLConstraint ;  
		sh:message "VsConverter.targetPhasePcc is not provided for a converter with VsPpccControlKind.phasePcc." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:VsConverter.targetPhasePcc ?targetphasepcc}.
        FILTER (!bound(?targetphasepcc) && ?value=cim:VsPpccControlKind.phasePcc) .        
			}""" .    
      
sshu:VsConverter.pPccControl-targetValuePpcc
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.pPccControl-targetValuePpccSparql ;
        sh:description  "Control is real power at point of common coupling. The target value is provided by ACDCConverter.targetPpcc." ;
        sh:name         "C:301:SSH:VsPpccControlKind.pPcc:targetValuePpcc" ;
        sh:path         cim:VsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        28 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.pPccControl-targetValuePpccSparql
		a         sh:SPARQLConstraint ;  
		sh:message "ACDCConverter.targetPpcc is not provided for a converter with VsPpccControlKind.pPcc." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:ACDCConverter.targetPpcc ?targetppcc}.
        FILTER (!bound(?targetppcc) && ?value=cim:VsPpccControlKind.pPcc) .        
			}""" .       
      

sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroop
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopSparql ;
        sh:description  "Target values are provided by ACDCConverter.targetPpcc, ACDCConverter.targetUdc and VsConverter.droop." ;
        sh:name         "C:301:SSH:VsPpccControlKind.pPccAndUdcDroop:targetValuepPccAndUdcDroop" ;
        sh:path         cim:VsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        29 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopSparql
		a         sh:SPARQLConstraint ;  
		sh:message "One or all among ACDCConverter.targetPpcc, ACDCConverter.targetUdc and VsConverter.droop are not provided for a converter with VsPpccControlKind.pPccAndUdcDroop." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:ACDCConverter.targetPpcc ?targetppcc}.
        OPTIONAL {$this cim:ACDCConverter.targetUdc ?targetudc}.
        OPTIONAL {$this cim:VsConverter.droop ?droop}.
        FILTER ((!bound(?targetppcc) || !bound(?targetudc) || !bound(?droop)) && ?value=cim:VsPpccControlKind.pPccAndUdcDroop) .        
			}""" .   

sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopPilot
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopPilotSparql ;
        sh:description  "Targets are provided by ACDCConverter.targetPpcc, ACDCConverter.targetUdc and  VsConverter.droop." ;
        sh:name         "C:301:SSH:VsPpccControlKind.pPccAndUdcDroopPilot:targetValuepPccAndUdcDroopPilot" ;
        sh:path         cim:VsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        30 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopPilotSparql
		a         sh:SPARQLConstraint ;  
		sh:message "One or all among ACDCConverter.targetPpcc, ACDCConverter.targetUdc and  VsConverter.droop are not provided for a converter with VsPpccControlKind.pPccAndUdcDroopPilot." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:ACDCConverter.targetPpcc ?targetppcc}.
        OPTIONAL {$this cim:ACDCConverter.targetUdc ?targetudc}.
        OPTIONAL {$this cim:VsConverter.droop ?droop}.
        FILTER ((!bound(?targetppcc) || !bound(?targetudc) || !bound(?droop)) && ?value=cim:VsPpccControlKind.pPccAndUdcDroopPilot) .        
			}""" .         
 
      
sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopWithCompensation
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopWithCompensationSparql ;
        sh:description  "Targets are provided by ACDCConverter.targetPpcc, ACDCConverter.targetUdc, VsConverter.droop and VsConverter.droopCompensation." ;
        sh:name         "C:301:SSH:VsPpccControlKind.pPccAndUdcDroopWithCompensation:targetValuepPccAndUdcDroopWithCompensation" ;
        sh:path         cim:VsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        31 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.pPccControl-targetValuepPccAndUdcDroopWithCompensationSparql
		a         sh:SPARQLConstraint ;  
		sh:message "One or all among ACDCConverter.targetPpcc, ACDCConverter.targetUdc, VsConverter.droop and VsConverter.droopCompensation are not provided for a converter with VsPpccControlKind.pPccAndUdcDroopWithCompensation." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:ACDCConverter.targetPpcc ?targetppcc}.
        OPTIONAL {$this cim:ACDCConverter.targetUdc ?targetudc}.
        OPTIONAL {$this cim:VsConverter.droop ?droop}.
        OPTIONAL {$this cim:VsConverter.droopCompensation ?droopcompensation}.
        FILTER ((!bound(?targetppcc) || !bound(?targetudc) || !bound(?droop) || !bound(?droopcompensation)) && ?value=cim:VsPpccControlKind.pPccAndUdcDroopWithCompensation) .        
			}""" .       
           
sshu:VsConverter.pPccControl-targetValueUdc
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.pPccControl-targetValueUdcSparql ;
        sh:description  "Control is DC voltage  with target value provided by ACDCConverter.targetUdc." ;
        sh:name         "C:301:SSH:VsPpccControlKind.udc:targetValueUdc" ;
        sh:path         cim:VsConverter.pPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        32 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.pPccControl-targetValueUdcSparql
		a         sh:SPARQLConstraint ;  
		sh:message "ACDCConverter.targetUdc is not provided for a converter with VsPpccControlKind.udc." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:ACDCConverter.targetUdc ?targetudc}.
        FILTER (!bound(?targetudc) && ?value=cim:VsPpccControlKind.udc) .        
			}""" .    

sshu:VsConverter.qPccControl-targetValuepowerFactorPcc
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.qPccControl-targetValuepowerFactorPccSparql ;
        sh:description  "Control is power factor at point of common coupling. Target is provided by VsConverter.targetPowerFactorPcc." ;
        sh:name         "C:301:SSH:VsQpccControlKind.powerFactorPcc:targetValuepowerFactorPcc" ;
        sh:path         cim:VsConverter.qPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        33 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.qPccControl-targetValuepowerFactorPccSparql
		a         sh:SPARQLConstraint ;  
		sh:message "VsConverter.targetPowerFactorPcc is not provided for a converter with VsQpccControlKind.powerFactorPcc." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:VsConverter.targetPowerFactorPcc ?targetpowerfactorpcc}.
        FILTER (!bound(?targetpowerfactorpcc) && ?value=cim:VsQpccControlKind.powerFactorPcc) .        
			}""" .


sshu:VsConverter.qPccControl-targetValuepulseWidthModulation
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.qPccControl-targetValuepulseWidthModulationSparql ;
        sh:description  "No explicit control. Pulse-modulation factor is directly set in magnitude (VsConverter.targetPWMfactor) and phase (VsConverter.targetPhasePcc)." ;
        sh:name         "C:301:SSH:VsQpccControlKind.pulseWidthModulation:targetValuepulseWidthModulation" ;
        sh:path         cim:VsConverter.qPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        34 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.qPccControl-targetValuepulseWidthModulationSparql
		a         sh:SPARQLConstraint ;  
		sh:message "VsConverter.targetPWMfactor and/or VsConverter.targetPhasePcc are not provided for a converter with VsQpccControlKind.pulseWidthModulation." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:VsConverter.targetPWMfactor ?targetpwmfactor}.
        OPTIONAL {$this cim:VsConverter.targetPhasePcc ?targetphasepcc}.
        FILTER ((!bound(?targetpwmfactor) || !bound(?targetphasepcc)) && ?value=cim:VsQpccControlKind.pulseWidthModulation) .        
			}""" .


sshu:VsConverter.qPccControl-targetValuereactivePcc
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.qPccControl-targetValuereactivePccSparql ;
        sh:description  "Control is reactive power at point of common coupling. Target is provided by VsConverter.targetQpcc." ;
        sh:name         "C:301:SSH:VsQpccControlKind.reactivePcc:targetValuereactivePcc" ;
        sh:path         cim:VsConverter.qPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        35 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.qPccControl-targetValuereactivePccSparql
		a         sh:SPARQLConstraint ;  
		sh:message "VsConverter.targetQpcc is not provided for a converter with VsQpccControlKind.reactivePcc." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:VsConverter.targetQpcc ?targetqpcc}.
        FILTER (!bound(?targetqpcc) && ?value=cim:VsQpccControlKind.reactivePcc) .        
			}""" .


sshu:VsConverter.qPccControl-targetValuevoltagePcc
        a               sh:PropertyShape ;
        sh:sparql       sshu:VsConverter.qPccControl-targetValuevoltagePccSparql ;
        sh:description  "Control is voltage at point of common coupling. Target is provided by VsConverter.targetUpcc." ;
        sh:name         "C:301:SSH:VsQpccControlKind.voltagePcc:targetValuevoltagePcc" ;
        sh:path         cim:VsConverter.qPccControl ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        36 ;
        sh:severity     sh:Violation .
        
    
sshu:VsConverter.qPccControl-targetValuevoltagePccSparql
		a         sh:SPARQLConstraint ;  
		sh:message "VsConverter.targetUpcc is not provided for a converter with VsQpccControlKind.voltagePcc." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:VsConverter.targetUpcc ?targetupcc}.
        FILTER (!bound(?targetupcc) && ?value=cim:VsQpccControlKind.voltagePcc) .        
			}""" .

sshu:RegulatingControl.targetDeadband-applicability
        a               sh:PropertyShape ;
        sh:sparql       sshu:RegulatingControl.targetDeadband-applicabilitySparql ;
        sh:description  "This is a deadband used with discrete control to avoid excessive update of controls like tap changers and shunt compensator banks while regulating.…If RegulatingControl.discrete is set to false, the RegulatingControl.targetDeadband is to be ignored." ;
        sh:name         "C:301:SSH:RegulatingControl.targetDeadband:applicability" ;
        sh:path         cim:RegulatingControl.discrete ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        37 ;
        sh:severity     sh:Violation .
        
    
sshu:RegulatingControl.targetDeadband-applicabilitySparql
		a         sh:SPARQLConstraint ;  
		sh:message "Either RegulatingControl.targetDeadband is provided for a continuous control or it is not provided for a discrete control." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        OPTIONAL {$this cim:RegulatingControl.targetDeadband ?targetdeadband}.
        FILTER ((bound(?targetdeadband) && ?value=false) || (!bound(?targetdeadband) && ?value=true)) .        
			}""" .      
      
      
sshu:EnergySource.activePower-consumer
        a               sh:PropertyShape ;
        sh:sparql       sshu:EnergySource.activePower-consumerSparql ;
        sh:description  "Load sign convention is used, i.e. positive sign means flow out from a node." ;
        sh:name         "C:301:SSH:EnergySource.activePower:consumer" ;
        sh:path         cim:EnergySource.activePower ;
        sh:group        sshu:ValueConstraintsGroup ;
        sh:order        38 ;
        sh:severity     sh:Warning .
        
    
sshu:EnergySource.activePower-consumerSparql
		a         sh:SPARQLConstraint ;  
		sh:message "EnergySource that is a consumer." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        FILTER (?value>0) .        
			}""" .      
      
      
      
      
      
      
      
      
      
      
      
      
      
      