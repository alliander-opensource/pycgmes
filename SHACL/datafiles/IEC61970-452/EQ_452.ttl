@base          <http://iec.ch/TC57/ns/CIM/Equipment-EU/constraints/IEC61970-452/3.0> .
@prefix eu:    <http://iec.ch/TC57/CIM100-European#> .
@prefix cims:  <http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix cim:   <http://iec.ch/TC57/CIM100#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dash:  <http://datashapes.org/dash#> .
@prefix eq452: <http://iec.ch/TC57/ns/CIM/Equipment-EU/constraints/IEC61970-452/3.0#> .
@prefix dct:    <http://purl.org/dc/terms/> .
@prefix dcat:    <http://www.w3.org/ns/dcat#> .

eq452:Ontology  rdf:type         owl:Ontology ;
        dct:conformsTo        "urn:iso:std:iec:61970-501:draft:ed-2" , "urn:iso:std:iec:61970-600-2:ed-1" , "urn:iso:std:iec:61970-301:ed-7:amd1" , "file://iec61970cim17v40_iec61968cim13v13a_iec62325cim03v17a.eap" ;
        dct:creator           "ENTSO-E CIM EG"@en ;
        dct:description       "The constraints for the core equipment profile from IEC 61970-452."@en ;
        dct:identifier        "urn:uuid:76431bd5-4576-4d15-a212-3222e585df59" ;
        dct:issued            "2021-10-19T12:09:21Z"^^xsd:dateTime ;
        dct:language          "en-GB" ;
        dct:modified          "2020-10-19"^^xsd:date ;
        dct:publisher         "ENTSO-E"@en ;
        dct:rights            "Copyright"@en ;
        dct:rightsHolder      "ENTSO-E"@en ;
        dct:title             "Core Equipment 452 Constraints"@en ;
        owl:versionIRI        <http://iec.ch/TC57/ns/CIM/Equipment-EU/constraints/IEC61970-452/3.0> ;
        owl:versionInfo       "3.0.0"@en ;
        dcat:landingPage      "https://www.entsoe.eu/digital/cim/cim-for-grid-models-exchange/" ;
        dcat:theme            "constraints"@en .

cim:    
    a           owl:Ontology ;
    owl:imports sh: ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100#"^^xsd:anyURI ;
        sh:prefix "cim" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
        sh:prefix "rdf" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100-European#"^^xsd:anyURI ;
        sh:prefix "eu" ;
    ] .


eq452:DCLineSegment  a  sh:NodeShape ;
        sh:property     eq452:DCLineSegment.resistance-valueRange ;
        sh:targetClass  cim:DCLineSegment .


eq452:PowerTransformerEnd.b-valueRange
        a                sh:PropertyShape ;
        sh:description   "PowerTransformerEnd.b shall be negative value or zero. Negative magnetising branch susceptance (PowerTransformerEnd.b) means inductive reactive power losses in no load. " ;
        sh:group         eq452:EQ452 ;
        sh:maxInclusive  "0.0"^^xsd:float ;
        sh:message       "The value is positive." ;
        sh:name          "C:452:EQ:PowerTransformerEnd.b:valueRange" ;
        sh:order         9 ;
        sh:path          cim:PowerTransformerEnd.b ;
        sh:severity      sh:Violation .

eq452:ThermalGeneratingUnit
        a               sh:NodeShape ;
        sh:property     eq452:GeneratingUnit.minOperatingP-valueRangePair , eq452:GeneratingUnit.maxOperatingP-ratedS;
        sh:targetClass  cim:ThermalGeneratingUnit .

eq452:Breaker  a        sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:Breaker .


eq452:PowerTransformer
        a               sh:NodeShape ;
        sh:property     eq452:PowerTransformerEnd.x-value , eq452:PowerTransformer-containment;
        sh:targetClass  cim:PowerTransformer .

eq452:PowerTransformerEnd.g-valueRange
        a                sh:PropertyShape ;
        sh:description   "PowerTransformerEnd.g shall be positive value or zero. Positive magnetising branch conductance (PowerTransformerEnd.g) means positive active power losses in no load." ;
        sh:group         eq452:EQ452 ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:452:EQ:PowerTransformerEnd.g:valueRange" ;
        sh:order         10 ;
        sh:path          cim:PowerTransformerEnd.g ;
        sh:severity      sh:Violation .

eq452:ACLineSegment.x-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute shall be a positive value. As negative reactance values are not allowed for ACLineSegment-s it is recommended to model series compensators explicitly." ;
        sh:group         eq452:EQ452 ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:452:EQ:ACLineSegment.x:valueRange" ;
        sh:order         2 ;
        sh:path          cim:ACLineSegment.x ;
        sh:severity      sh:Violation .

eq452:NonlinearShuntCompensatorPoint
        a               sh:NodeShape ;
        sh:property     eq452:NonlinearShuntCompensatorPoint.g-valueRange ;
        sh:targetClass  cim:NonlinearShuntCompensatorPoint .

eq452:PhaseTapChangerSymmetrical
        a               sh:NodeShape ;
        sh:property     eq452:PhaseTapChanger-controlModeP;
        sh:targetClass  cim:PhaseTapChangerSymmetrical .

eq452:SynchronousMachine.minQ-valueRangePair
        a                    sh:PropertyShape ;
        sh:description       "SynchronousMachine.maxQ shall be greater than or equal to SynchronousMachine.minQ." ;
        sh:group             eq452:EQ452 ;
        sh:lessThanOrEquals  cim:SynchronousMachine.maxQ ;
        sh:message           "The value is greater than the value of SynchronousMachine.maxQ." ;
        sh:name              "C:452:EQ:SynchronousMachine.maxQ:valueRangePair" ;
        sh:order             11 ;
        sh:path              cim:SynchronousMachine.minQ ;
        sh:severity          sh:Violation .

eq452:NonlinearShuntCompensatorPoint.g-valueRange
        a                sh:PropertyShape ;
        sh:description   "NonlinearShuntCompensatorPoint.g shall be a positive value or zero." ;
        sh:group         eq452:EQ452 ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:452:EQ:NonlinearShuntCompensatorPoint.g:valueRange" ;
        sh:order         8 ;
        sh:path          cim:NonlinearShuntCompensatorPoint.g ;
        sh:severity      sh:Violation .

eq452:PhaseTapChangerAsymmetrical
        a               sh:NodeShape ;
        sh:property     eq452:PhaseTapChanger-controlModeP;
        sh:targetClass  cim:PhaseTapChangerAsymmetrical .


eq452:SeriesCompensator
        a               sh:NodeShape ;
        sh:property     eq452:ConductingEquipment.BaseVoltage-whereRequired;
        sh:targetClass  cim:SeriesCompensator .

eq452:ReactiveCapabilityCurve
        a               sh:NodeShape ;
        sh:property     eq452:ReactiveCapabilityCurve-reactiveCountP , eq452:ReactiveCapabilityCurve-xvalue;
        sh:targetClass  cim:ReactiveCapabilityCurve .

eq452:SolarGeneratingUnit
        a               sh:NodeShape ;
        sh:property     eq452:GeneratingUnit.minOperatingP-valueRangePair , eq452:GeneratingUnit.maxOperatingP-ratedS;
        sh:targetClass  cim:SolarGeneratingUnit .


eq452:LinearShuntCompensator.gPerSection-valueRange
        a                sh:PropertyShape ;
        sh:description   "LinearShuntCompensator.gPerSection shall be a positive value or zero." ;
        sh:group         eq452:EQ452 ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:452:EQ:LinearShuntCompensator.gPerSection:valueRange" ;
        sh:order         7 ;
        sh:path          cim:LinearShuntCompensator.gPerSection ;
        sh:severity      sh:Violation .


eq452:NuclearGeneratingUnit
        a               sh:NodeShape ;
        sh:property     eq452:GeneratingUnit.minOperatingP-valueRangePair , eq452:GeneratingUnit.maxOperatingP-ratedS;
        sh:targetClass  cim:NuclearGeneratingUnit .

eq452:HydroGeneratingUnit
        a               sh:NodeShape ;
        sh:property     eq452:GeneratingUnit.minOperatingP-valueRangePair , eq452:GeneratingUnit.maxOperatingP-ratedS , eq452:HydroGeneratingUnit.energyConversionCapability-typeConsistency;
        sh:targetClass  cim:HydroGeneratingUnit .

eq452:GeneratingUnit.minOperatingP-valueRangePair
        a                    sh:PropertyShape ;
        sh:description       "GeneratingUnit.maxOperatingP shall be greater than or equal to GeneratingUnit.minOperatingP." ;
        sh:group             eq452:EQ452 ;
        sh:lessThanOrEquals  cim:GeneratingUnit.maxOperatingP ;
        sh:message           "The value is greater than the value of GeneratingUnit.maxOperatingP." ;
        sh:name              "C:452:EQ:GeneratingUnit.minOperatingP:valueRangePair" ;
        sh:order             4 ;
        sh:path              cim:GeneratingUnit.minOperatingP ;
        sh:severity          sh:Violation .

eq452:Cut  a            sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:Cut .

eq452:EquivalentBranch
        a               sh:NodeShape ;
        sh:property     eq452:ConductingEquipment.BaseVoltage-whereRequired;
        sh:targetClass  cim:EquivalentBranch .

eq452:Switch  a         sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:Switch .

eq452:LinearShuntCompensator
        a               sh:NodeShape ;
        sh:property     eq452:LinearShuntCompensator.gPerSection-valueRange , eq452:ShuntCompensator-controlMode , eq452:ShuntCompensator.voltageSensitivity-valueRange;
        sh:targetClass  cim:LinearShuntCompensator .

eq452:VsCapabilityCurve
        a               sh:NodeShape ;
        sh:property     eq452:VsCapabilityCurve-VsCapabilityCurveCount , eq452:VsCapabilityCurve-yvalues;
        sh:targetClass  cim:VsCapabilityCurve .

eq452:StaticVarCompensator
        a               sh:NodeShape ;
        sh:property     eq452:StaticVarCompensator-controlMode;
        sh:targetClass  cim:StaticVarCompensator .

eq452:PhaseTapChangerTabular
        a               sh:NodeShape ;
        sh:property     eq452:PhaseTapChanger-controlModeP;
        sh:targetClass  cim:PhaseTapChangerTabular .

eq452:Disconnector  a   sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:Disconnector .

eq452:TapChangerControl
        a               sh:NodeShape ;
        sh:property     eq452:TapChangerControl-remoteQcontrol;
        sh:targetClass  cim:TapChangerControl .

eq452:LoadBreakSwitch
        a               sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:LoadBreakSwitch .

eq452:Fuse  a           sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:Fuse .

eq452:DayType  a        sh:NodeShape ;
        sh:property     eq452:IdentifiedObject.name-validValues;
        sh:targetClass  cim:DayType .

eq452:GeneratingUnit  a  sh:NodeShape ;
        sh:property     eq452:GeneratingUnit.minOperatingP-valueRangePair , eq452:GeneratingUnit.maxOperatingP-ratedS;
        sh:targetClass  cim:GeneratingUnit .

eq452:NonlinearShuntCompensator
        a               sh:NodeShape ;
        sh:property     eq452:ShuntCompensator-controlMode , eq452:ShuntCompensator.voltageSensitivity-valueRange;
        sh:targetClass  cim:NonlinearShuntCompensator .

eq452:SynchronousMachine
        a               sh:NodeShape ;
        sh:property     eq452:SynchronousMachine.minQ-valueRangePair , eq452:SynchronousMachine-controlMode , eq452:GeneratingUnit-typeDependency , eq452:SynchronousMachine-reactiveLimits , eq452:SynchronousMachine.type-condenser , eq452:CurveData.xvalue-value;
        sh:targetClass  cim:SynchronousMachine .

eq452:PowerTransformerEnd
        a               sh:NodeShape ;
        sh:property     eq452:PowerTransformerEnd.g-valueRange , eq452:PowerTransformerEnd.b-valueRange ;
        sh:targetClass  cim:PowerTransformerEnd .

eq452:ACLineSegment.r-valueRange
        a                sh:PropertyShape ;
        sh:description   "ACLineSegment.r shall be a positive value or zero." ;
        sh:group         eq452:EQ452 ;
        sh:message       "The value is negative." ;
        sh:minInclusive  "0.0"^^xsd:float ;
        sh:name          "C:452:EQ:ACLineSegment.r:valueRange" ;
        sh:order         1 ;
        sh:path          cim:ACLineSegment.r ;
        sh:severity      sh:Violation .

eq452:Jumper  a         sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:Jumper .

eq452:RegulatingControl
        a               sh:NodeShape ;
        sh:property     eq452:RegulatingControl-RegulatingEquipment;
        sh:targetClass  cim:RegulatingControl .

eq452:EQ452
        a           sh:PropertyGroup ;
        rdfs:label  "IEC61970-452-EQ" ;
        sh:order    0 .

eq452:DCLineSegment.resistance-valueRange
        a                sh:PropertyShape ;
        sh:description   "The attribute DCLineSegment.resistance shall be a positive value." ;
        sh:group         eq452:EQ452 ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:name          "C:452:EQ:DCLineSegment.resistance:valueRange" ;
        sh:order         3 ;
        sh:path          cim:DCLineSegment.resistance ;
        sh:severity      sh:Violation .

eq452:DisconnectingCircuitBreaker
        a               sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:DisconnectingCircuitBreaker .

eq452:RatioTapChanger
        a               sh:NodeShape ;
        sh:property     eq452:RatioTapChanger-controlMode;
        sh:targetClass  cim:RatioTapChanger .

eq452:ACLineSegment  a  sh:NodeShape ;
        sh:property     eq452:ACLineSegment.x-valueRange , eq452:ACLineSegment.r-valueRange , eq452:ConductingEquipment.BaseVoltage-whereRequired;
        sh:targetClass  cim:ACLineSegment .

eq452:WindGeneratingUnit
        a               sh:NodeShape ;
        sh:property     eq452:GeneratingUnit.minOperatingP-valueRangePair , eq452:GeneratingUnit.maxOperatingP-ratedS ;
        sh:targetClass  cim:WindGeneratingUnit .

eq452:GroundDisconnector
        a               sh:NodeShape ;
        sh:property     eq452:Switch-connection;
        sh:targetClass  cim:GroundDisconnector .


eq452:PhaseTapChangerLinear
        a               sh:NodeShape ;
        sh:property     eq452:PhaseTapChanger-controlModeP;
        sh:targetClass  cim:PhaseTapChangerLinear .

eq452:OperationalLimitSet
        a               sh:NodeShape ;
        sh:property     eq452:OperationalLimitSet-limits;
        sh:targetClass  cim:OperationalLimitSet .


eq452:VsCapabilityCurve-VsCapabilityCurveCount
        a               sh:PropertyShape ;
        sh:sparql       eq452:VsCapabilityCurve-VsCapabilityCurveCountSparql ;
        sh:path         rdf:type ;
        sh:description  "If CurveData.Curve is a VsCapabilityCurve at least two CurveData shall be associated." ;
        sh:name         "C:452:EQ:CurveData.Curve:VsCapabilityCurveCount" ;
        sh:group        eq452:EQ452 ;
        sh:order        12 ;
        sh:severity     sh:Violation .
        
    
eq452:VsCapabilityCurve-VsCapabilityCurveCountSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Less than two instances of CurveData are associated." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this (COUNT(?typecd) AS ?curvedatas)
        WHERE {
        ?curvedata cim:CurveData.Curve $this .
        ?curvedata rdf:type ?typecd .
        }
        GROUP BY $this ?typecd
        HAVING(?curvedatas<2)
      """ .      
      
      
eq452:ReactiveCapabilityCurve-reactiveCountP
        a               sh:PropertyShape ;
        sh:sparql       eq452:ReactiveCapabilityCurve-reactiveCountPSparql ;
        sh:path         rdf:type ;
        sh:description  "For a SynchronousMachine with a ReactiveCapabilityCurve the number of CurveData instances depends on the attribute SynchronousMachine.type as follows: - condenser, ReactiveCapabilityCurve is given by SynchronousMachine.maxQ and SynchronousMachine.minQ. There shall not be any association to ReactiveCapabilityCurve. - generator or generatorOrCondenser, at least two CurveData instances with CurveData.xvalue greater than or equal to 0. - motor or motorOrCondenser, at least two CurveData instances with CurveData.xvalue less than or equal to 0. - generatorOrMotor or generatorOrCondenserOrMotor, at least three CurveData instances with at least one having CurveData.xvalue greater than or equal to 0 and one having CurveData.xvalue less than or equal to 0. In general, it is required that the points defined by the ReactiveCapabilityCurve form an area of reactive capability different than 0.   " ;
        sh:name         "C:452:EQ:CurveData.Curve:reactiveCountP" ;
        sh:group        eq452:EQ452 ;
        sh:order        13 ;
        sh:severity     sh:Violation .
        
    
eq452:ReactiveCapabilityCurve-reactiveCountPSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Reactive capability curve does not have the required number of points or the CurveData.xvalue is not in the defined range."  ;
		sh:prefixes cim: ;
		sh:select """
	    SELECT $this ?curvedatas  ?value
      WHERE {
        {
        SELECT $this (COUNT(?typecd) AS ?curvedatas) (MAX(?xvalue) AS ?maxxvalue) (MIN(?xvalue) AS ?minxvalue)
        WHERE {
        $this  ^cim:CurveData.Curve/rdf:type ?typecd .
        $this  ^cim:CurveData.Curve/cim:CurveData.xvalue ?xvalue .
        #?curvedata cim:CurveData.Curve $this .
        #?curvedata rdf:type ?typecd .
        #?curvedata cim:CurveData.xvalue ?xvalue .
        }
        GROUP BY $this ?typecd 
        }
        
        $this ^cim:SynchronousMachine.InitialReactiveCapabilityCurve/cim:SynchronousMachine.type ?type .
        #BIND(EXISTS{$this ^cim:SynchronousMachine.InitialReactiveCapabilityCurve/cim:SynchronousMachine.type ?a} AS ?hasrcc).
        
        #OPTIONAL {?sm cim:SynchronousMachine.InitialReactiveCapabilityCurve $this }.
        #OPTIONAL {?sm cim:SynchronousMachine.type ?type }.
        #OPTIONAL {$this ^cim:SynchronousMachine.InitialReactiveCapabilityCurve ?mach }.
        $this ^cim:CurveData.Curve/cim:CurveData.xvalue ?xvalue1 .
        #?curvedata1 cim:CurveData.Curve $this .
        #?curvedata1 cim:CurveData.xvalue ?xvalue1 .
        BIND("" as ?value).


        #FILTER (?hasrcc=true && ((?type=cim:SynchronousMachineKind.condenser ) ||
        #((?type=cim:SynchronousMachineKind.generator || ?type=cim:SynchronousMachineKind.generatorOrCondenser) && (?curvedatas<2 || ?xvalue1<0)) ||
        #((?type=cim:SynchronousMachineKind.motor || ?type=cim:SynchronousMachineKind.motorOrCondenser) && (?curvedatas<2 || ?xvalue1>0)) ||
        #((?type=cim:SynchronousMachineKind.generatorOrMotor || ?type=cim:SynchronousMachineKind.generatorOrCondenserOrMotor) && (?curvedatas<3 || !(?maxxvalue>=0 && ?minxvalue<=0))))
        #) .
        FILTER (((?type=cim:SynchronousMachineKind.condenser ) ||
        ((?type=cim:SynchronousMachineKind.generator || ?type=cim:SynchronousMachineKind.generatorOrCondenser) && (?curvedatas<2 || ?xvalue1<0)) ||
        ((?type=cim:SynchronousMachineKind.motor || ?type=cim:SynchronousMachineKind.motorOrCondenser) && (?curvedatas<2 || ?xvalue1>0)) ||
        ((?type=cim:SynchronousMachineKind.generatorOrMotor || ?type=cim:SynchronousMachineKind.generatorOrCondenserOrMotor) && (?curvedatas<3 || !(?maxxvalue>=0 && ?minxvalue<=0))))
        ) .
        
        } """ .       

eq452:VsCapabilityCurve-yvalues
        a               sh:PropertyShape ;
        sh:sparql       eq452:VsCapabilityCurve-yvaluesSparql ;
        sh:path         rdf:type ;
        sh:description  "If CurveData.Curve is a VsCapabilityCurve, the CurveData.y2value shall be greater than CurveData.y1value." ;
        sh:name         "C:452:EQ:CurveData.Curve:VsCapabilityCurve" ;
        sh:group        eq452:EQ452 ;
        sh:order        14 ;
        sh:severity     sh:Violation .
        
    
eq452:VsCapabilityCurve-yvaluesSparql
		a         sh:SPARQLConstraint ;  
		sh:message "CurveData.y2value is not greater than CurveData.y1value" ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this 
        WHERE {
        ?curvedata cim:CurveData.Curve $this .
        ?curvedata cim:CurveData.y1value ?y1value .
        ?curvedata cim:CurveData.y2value ?y2value .
        FILTER (?y2value<=?y1value).
        }""" .  

eq452:PhaseTapChanger-controlModeP
        a               sh:PropertyShape ;
        sh:sparql       eq452:PhaseTapChanger-controlModePSparql ;
        sh:path         rdf:type ;
        sh:description  "The association TapChanger.TapChangerControl for PhaseTapChanger-s shall only point to a TapChangerControl that has the following control modes for RegulatingControl.mode: activePower or voltage." ;
        sh:name         "C:452:EQ:PhaseTapChanger:controlModeP" ;
        sh:group        eq452:EQ452 ;
        sh:order        15 ;
        sh:severity     sh:Violation .
        
    
eq452:PhaseTapChanger-controlModePSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Unallowed regulating control mode for a PhaseTapChanger." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this ?value 
        WHERE {
        #?rcontrol ^cim:TapChanger.TapChangerControl $this  .
        #?rcontrol cim:RegulatingControl.mode ?value  .
        $this cim:TapChanger.TapChangerControl/cim:RegulatingControl.mode ?value  .
        FILTER (?value!=cim:RegulatingControlModeKind.activePower && ?value!=cim:RegulatingControlModeKind.voltage).
        }""" .  

eq452:RatioTapChanger-controlMode
        a               sh:PropertyShape ;
        sh:sparql       eq452:RatioTapChanger-controlModeSparql ;
        sh:path         rdf:type ;
        sh:description  "The association TapChanger.TapChangerControl for RatioTapChanger-s shall only point to a TapChangerControl the has the following control modes for RegulatingControl.mode: voltage, reactivePower and powerFactor." ;
        sh:name         "C:452:EQ:RatioTapChanger:controlMode" ;
        sh:group        eq452:EQ452 ;
        sh:order        16 ;
        sh:severity     sh:Violation .
        
    
eq452:RatioTapChanger-controlModeSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Unallowed regulating control mode for a RatioTapChanger." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this ?value 
        WHERE {
        #?rcontrol ^cim:TapChanger.TapChangerControl $this  .
        #?rcontrol cim:RegulatingControl.mode ?value  .
        $this cim:TapChanger.TapChangerControl/cim:RegulatingControl.mode ?value  .
        FILTER (?value!=cim:RegulatingControlModeKind.reactivePower && ?value!=cim:RegulatingControlModeKind.voltage && ?value!=cim:RegulatingControlModeKind.powerFactor).
        }""" . 

eq452:ShuntCompensator-controlMode
        a               sh:PropertyShape ;
        sh:sparql       eq452:ShuntCompensator-controlModeSparql ;
        sh:path         rdf:type ;
        sh:description  "For ShuntCompensator, the association RegulatingCondEq.RequlatingControl shall only point to a RequlatingControl that has the following control modes for RegulatingControl.mode: voltage, reactivePower and powerFactor." ;
        sh:name         "C:452:EQ:ShuntCompensator:controlMode" ;
        sh:group        eq452:EQ452 ;
        sh:order        17 ;
        sh:severity     sh:Violation .
        
    
eq452:ShuntCompensator-controlModeSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Unallowed regulating control mode for a ShuntCompensator." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this ?value 
        WHERE {
        #?rcontrol ^cim:RegulatingCondEq.RegulatingControl $this  .
        #?rcontrol cim:RegulatingControl.mode ?value  .
        $this cim:RegulatingCondEq.RegulatingControl/cim:RegulatingControl.mode ?value  .
        FILTER (?value!=cim:RegulatingControlModeKind.reactivePower && ?value!=cim:RegulatingControlModeKind.voltage && ?value!=cim:RegulatingControlModeKind.powerFactor).
        }""" . 

eq452:SynchronousMachine-controlMode
        a               sh:PropertyShape ;
        sh:sparql       eq452:SynchronousMachine-controlModeSparql ;
        sh:path         rdf:type ;
        sh:description  "For SynchronousMachine, the association RegulatingCondEq.RequlatingControl shall only point to a RequlatingControl that has the following control modes for RegulatingControl.mode: voltage, reactivePower and powerFactor." ;
        sh:name         "C:452:EQ:SynchronousMachine:controlMode" ;
        sh:group        eq452:EQ452 ;
        sh:order        18 ;
        sh:severity     sh:Violation .
        
    
eq452:SynchronousMachine-controlModeSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Unallowed regulating control mode for a SynchronousMachine." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this ?value 
        WHERE {
        #?rcontrol ^cim:RegulatingCondEq.RegulatingControl $this  .
        #?rcontrol cim:RegulatingControl.mode ?value  .
        $this cim:RegulatingCondEq.RegulatingControl/cim:RegulatingControl.mode ?value  .
        FILTER (?value!=cim:RegulatingControlModeKind.reactivePower && ?value!=cim:RegulatingControlModeKind.voltage && ?value!=cim:RegulatingControlModeKind.powerFactor).
        }""" . 


eq452:StaticVarCompensator-controlMode
        a               sh:PropertyShape ;
        sh:sparql       eq452:StaticVarCompensator-controlModeSparql ;
        sh:path         rdf:type ;
        sh:description  "For StaticVarCompensator, the association RegulatingCondEq.RequlatingControl is required and shall only point to a RequlatingControl that has the following control modes for RegulatingControl.mode: voltage and reactivePower." ;
        sh:name         "C:452:EQ:StaticVarCompensator:controlMode" ;
        sh:group        eq452:EQ452 ;
        sh:order        19 ;
        sh:severity     sh:Violation .
        
    
eq452:StaticVarCompensator-controlModeSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Unallowed regulating control mode for a StaticVarCompensator or not allowed usage of StaticVarCompensator.sVCControlMode or StaticVarCompensator.voltageSetPoint." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this ?value 
        WHERE {
        #?rcontrol ^cim:RegulatingCondEq.RegulatingControl $this  .
        #?rcontrol cim:RegulatingControl.mode ?value  .
        $this cim:RegulatingCondEq.RegulatingControl/cim:RegulatingControl.mode ?value .
        BIND(EXISTS{$this cim:StaticVarCompensator.sVCControlMode ?a} AS ?hassvcmode).
        BIND(EXISTS{$this cim:StaticVarCompensator.voltageSetPoint ?b} AS ?hasvsetpoint).
        #OPTIONAL {$this cim:StaticVarCompensator.sVCControlMode ?svcmode }.
        #OPTIONAL {$this cim:StaticVarCompensator.voltageSetPoint ?vsetpoint }.
        FILTER ((?value!=cim:RegulatingControlModeKind.reactivePower && ?value!=cim:RegulatingControlModeKind.voltage) || ?hassvcmode=true || ?hasvsetpoint=true).
        }""" . 

eq452:GeneratingUnit-typeDependency
        a               sh:PropertyShape ;
        sh:sparql       eq452:GeneratingUnit-typeDependencySparql ;
        sh:description  "GeneratingUnit.maxOperatingP and GeneratingUnit.minOperatingP shall depend on the SynchronousMachine.type of the associated SynchronousMachine as follows:- condenser: GeneratingUnit.minOperatingP and GeneratingUnit.maxOperatingP shall equal zero.- generator or generatorOrCondenser: GeneratingUnit.minOperatingP shall be greater than or equal to zero and GeneratingUnit.maxOperatingP shall be greater than zero.- motor or motorOrCondenser: GeneratingUnit.minOperatingP shall be a negative value and GeneratingUnit.maxOperatingP shall be a negative value or zero.- generatorOrMotor or generatorOrCondenserOrMotor: GeneratingUnit.minOperatingP shall be a negative value and GeneratingUnit.maxOperatingP shall be greater than zero." ;
        sh:name         "C:452:EQ:GeneratingUnit:typeDependency" ;
        sh:path         cim:SynchronousMachine.type ;
        sh:group        eq452:EQ452 ;
        sh:order        20 ;
        sh:severity     sh:Violation .
        
    
eq452:GeneratingUnit-typeDependencySparql
		a         sh:SPARQLConstraint ;  
		sh:message "Inconsistancy between GeneratingUnit.maxOperatingP and GeneratingUnit.minOperatingP and SynchronousMachine.type." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this ?value 
        WHERE {
        $this $PATH ?value .
        $this cim:RotatingMachine.GeneratingUnit/cim:GeneratingUnit.maxOperatingP ?maxp .
        $this cim:RotatingMachine.GeneratingUnit/cim:GeneratingUnit.minOperatingP ?minp .
        #OPTIONAL {$this cim:RotatingMachine.GeneratingUnit ?genunit } .
        #OPTIONAL {?genunit cim:GeneratingUnit.maxOperatingP ?maxp } .
        #OPTIONAL {?genunit cim:GeneratingUnit.minOperatingP ?minp } .
        #BIND(EXISTS{$this cim:RotatingMachine.GeneratingUnit ?a} AS ?hasgenunit).
        #BIND(EXISTS{$this cim:RotatingMachine.GeneratingUnit/cim:GeneratingUnit.maxOperatingP ?b} AS ?hasmaxp).
        #BIND(EXISTS{$this cim:RotatingMachine.GeneratingUnit/cim:GeneratingUnit.minOperatingP ?c} AS ?hasminp).
        
        
        #FILTER ((?hasgenunit=true && ?hasmaxp=true && ?hasminp=true && ?value=cim:SynchronousMachineKind.condenser && (?maxp!=0 || ?minp!=0)) ||
        #(?hasgenunit=true && ?hasmaxp=true && ?hasminp=true && (?value=cim:SynchronousMachineKind.generator || ?value=cim:SynchronousMachineKind.generatorOrCondenser) && (?maxp<=0 || ?minp<0)) ||
        #(?hasgenunit=true && ?hasmaxp=true && ?hasminp=true && (?value=cim:SynchronousMachineKind.motor || ?value=cim:SynchronousMachineKind.motorOrCondenser) && (?maxp>0 || ?minp>=0)) ||
        #(?hasgenunit=true && ?hasmaxp=true && ?hasminp=true && (?value=cim:SynchronousMachineKind.generatorOrMotor || ?value=cim:SynchronousMachineKind.generatorOrCondenserOrMotor) && (?maxp<=0 || ?minp>=0))
        #).
         FILTER ((?value=cim:SynchronousMachineKind.condenser && (?maxp!=0 || ?minp!=0)) ||
        ((?value=cim:SynchronousMachineKind.generator || ?value=cim:SynchronousMachineKind.generatorOrCondenser) && (?maxp<=0 || ?minp<0)) ||
        ((?value=cim:SynchronousMachineKind.motor || ?value=cim:SynchronousMachineKind.motorOrCondenser) && (?maxp>0 || ?minp>=0)) ||
        ((?value=cim:SynchronousMachineKind.generatorOrMotor || ?value=cim:SynchronousMachineKind.generatorOrCondenserOrMotor) && (?maxp<=0 || ?minp>=0))
        ).
        }""" . 

eq452:GeneratingUnit.aggregate
        a               sh:NodeShape ;
        sh:property     eq452:SynchronousMachine-aggregate , eq452:AsynchronousMachine-aggregate;
        sh:targetClass  cim:GeneratingUnit , cim:SolarGeneratingUnit , cim:HydroGeneratingUnit , cim:WindGeneratingUnit , cim:ThermalGeneratingUnit , cim:NuclearGeneratingUnit.
        
eq452:SynchronousMachine-aggregate
        a               sh:PropertyShape ;
        sh:sparql       eq452:SynchronousMachine-aggregateSparql ;
        sh:description  "If only one SynchronousMachine is associated with the GeneratingUnit then the Equipment.aggregate flag shall be consistent between the SynchronousMachine and GeneratingUnit if it exists in both." ;
        sh:name         "C:452:EQ:SynchronousMachine:aggregate" ;
        sh:group        eq452:EQ452 ;
        sh:path         cim:Equipment.aggregate ;
        sh:order        21 ;
        sh:severity     sh:Violation .
        
    
eq452:SynchronousMachine-aggregateSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The value is not consistent with .aggregate for the associated GeneratingUnit."  ;
		sh:prefixes cim: ;
		sh:select """
	    SELECT $this ?sms ?value 
      WHERE {
        {
        SELECT $this (COUNT(?typesm) AS ?sms) 
        WHERE {
        #BIND(EXISTS{$this ^cim:RotatingMachine.GeneratingUnit/rdf:type cim:SynchronousMachine} AS ?hasam).
        $this ^cim:RotatingMachine.GeneratingUnit/rdf:type ?typesm.
        #OPTIONAL {?sm cim:RotatingMachine.GeneratingUnit $this }.
        #OPTIONAL {?sm rdf:type ?typesm }.
        FILTER(?typesm=cim:SynchronousMachine ).
        }
        GROUP BY $this ?typesm 
        }
        $this $PATH ?value.
        #OPTIONAL {$this $PATH ?value }.
        #OPTIONAL {?sm cim:RotatingMachine.GeneratingUnit $this }.
        #OPTIONAL {?sm cim:Equipment.aggregate ?smaggregate }.
        $this ^cim:RotatingMachine.GeneratingUnit/cim:Equipment.aggregate ?smaggregate .
        #BIND(EXISTS{$this ^cim:RotatingMachine.GeneratingUnit/cim:Equipment.aggregate ?smaggregatea} AS ?hasaggr).
        #FILTER (?sms=1 && bound(?value) && ?hasaggr=true && ?value!=?smaggregate ) .
        FILTER (?sms=1 && ?value!=?smaggregate ) .
        } """ . 
        
eq452:AsynchronousMachine-aggregate
        a               sh:PropertyShape ;
        sh:sparql       eq452:AsynchronousMachine-aggregateSparql ;
        sh:description  "If one AsynchronousMachine is associated with one GeneratingUnit the flag Equipment.aggregate shall be consistent in case it is provided at both AsynchronousMachine and GeneratingUnit." ;
        sh:name         "C:452:EQ:AsynchronousMachine:aggregate" ;
        sh:group        eq452:EQ452 ;
        sh:path         cim:Equipment.aggregate ;
        sh:order        22 ;
        sh:severity     sh:Violation .
        
    
eq452:AsynchronousMachine-aggregateSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The value is not consistent with .aggregate for the associated GeneratingUnit."  ;
		sh:prefixes cim: ;
		sh:select """
	    SELECT $this ?sms ?value 
      WHERE {
        {
        SELECT $this (COUNT(?typesm) AS ?sms) 
        WHERE {
        #BIND(EXISTS{$this ^cim:RotatingMachine.GeneratingUnit/rdf:type cim:AsynchronousMachine} AS ?hasam).
        $this ^cim:RotatingMachine.GeneratingUnit/rdf:type ?typesm.
        #OPTIONAL {?sm cim:RotatingMachine.GeneratingUnit $this }.
        #OPTIONAL {?sm rdf:type ?typesm }.
        #FILTER(?typesm=cim:AsynchronousMachine && ?hasam=true).
        FILTER(?typesm=cim:AsynchronousMachine).
        }
        GROUP BY $this ?typesm 
        }
        $this $PATH ?value.
        #OPTIONAL {$this $PATH ?value }.
        #OPTIONAL {?sm cim:RotatingMachine.GeneratingUnit $this }.
        #OPTIONAL {?sm cim:Equipment.aggregate ?smaggregate }.
        $this ^cim:RotatingMachine.GeneratingUnit/cim:Equipment.aggregate ?smaggregate .
        #BIND(EXISTS{$this ^cim:RotatingMachine.GeneratingUnit/cim:Equipment.aggregate ?smaggregatea} AS ?hasaggr).
        #FILTER (?sms=1 && bound(?value) && ?hasaggr=true && ?value!=?smaggregate ) .
        FILTER (?sms=1 && ?value!=?smaggregate ) .
        } """ .        

eq452:IdentifiedObject.name-validValues
        a               sh:PropertyShape ;
        sh:description  "For DayType the name attribute indicates the days of the week that a given DayType represents. The name attribute is restricted to the following names: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday, Weekday, Weekend, All. If the name attribute is All, it represents all seven days of the week. If the name attribute is Weekday, it represents Monday through Friday. If the name attribute is Weekend, it represents Saturday and Sunday." ;
        sh:message      "Not valid value. The value is not one of the following values: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday, Weekday, Weekend, All." ;
        sh:name         "C:452:EQ:DayType.name:validValues" ;
        sh:in           ( "Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday" "Sunday" "Weekday" "Weekend" "All" ) ;
        sh:group        eq452:EQ452 ;
        sh:order        23 ;
        sh:path         cim:IdentifiedObject.name ;
        sh:severity     sh:Violation . 


eq452:ConductingEquipment.BaseVoltage-whereRequired
        a               sh:PropertyShape ;
        sh:description  "The ConductingEquipment.BaseVoltage association is required for the following ConductingEquipment: ACLineSegment, EquivalentBranch and SeriesCompensator. For all other Equipment-s, not contained in a VoltageLevel, the association ConductingEquipment.BaseVoltage can be provided (as it is optional), however the association to BaseVoltage coming from the container or transformer ends takes precedence." ;
        sh:message      "The association ConductingEquipment.BaseVoltage is not provided." ;
        sh:name         "C:452:EQ:ConductingEquipment.BaseVoltage:whereRequired" ;
        sh:minCount     1;
        sh:maxCount     1;
        sh:group        eq452:EQ452 ;
        sh:order        24 ;
        sh:path         cim:ConductingEquipment.BaseVoltage ;
        sh:severity     sh:Violation . 


eq452:CurveData
        a               sh:NodeShape ;
        sh:property     eq452:CurveData-equationY2 , eq452:CurveData-equationY1 , eq452:CurveData-reactive ;
        sh:targetClass  cim:CurveData .
        
eq452:CurveData-equationY2
        a               sh:PropertyShape ;
        sh:sparql       eq452:CurveData-equationY2Sparql ;
        sh:description  "If CurveData.Curve is a ReactiveCapabilityCurve, each CurveData shall satisfy the following relation: CurveData.xvalue^2+CurveData.y2value^2 shall be less than or equal to RotatingMachine.ratedS^2." ;
        sh:name         "C:452:EQ:CurveData.Curve:equationY2" ;
        sh:group        eq452:EQ452 ;
        sh:path         cim:CurveData.Curve ;
        sh:order        25 ;
        sh:severity     sh:Violation .
        
    
eq452:CurveData-equationY2Sparql
		a         sh:SPARQLConstraint ;  
		sh:message "The following is not fulfilled: CurveData.xvalue^2+CurveData.y2value^2 shall be less than or equal to RotatingMachine.ratedS^2."  ;
		sh:prefixes cim: ;
		sh:select """
	    SELECT $this ?value 
      WHERE {
        $this $PATH ?value .
        ?value rdf:type cim:ReactiveCapabilityCurve .
        $this cim:CurveData.xvalue ?xvalue .
        $this cim:CurveData.y2value ?y2value.
        #OPTIONAL {$this cim:CurveData.y2value ?y2value } .
        #BIND (EXISTS{?value ^cim:SynchronousMachine.InitialReactiveCapabilityCurve/cim:RotatingMachine.ratedS ?rateds} AS ?smrateds).
        ?value ^cim:SynchronousMachine.InitialReactiveCapabilityCurve/cim:RotatingMachine.ratedS ?rateds .
        #FILTER (?smrateds=true && bound(?y2value) && (?xvalue*?xvalue+?y2value*?y2value)>?rateds*?rateds) .
        FILTER ((?xvalue*?xvalue+?y2value*?y2value)>?rateds*?rateds) .
        } """ . 

eq452:CurveData-equationY1
        a               sh:PropertyShape ;
        sh:sparql       eq452:CurveData-equationY1Sparql ;
        sh:description  "If CurveData.Curve is a ReactiveCapabilityCurve, each CurveData shall satisfy the following relation: CurveData.xvalue^2+CurveData.y1value^2 shall be less than or equal to RotatingMachine.ratedS^2." ;
        sh:name         "C:452:EQ:CurveData.Curve:equationY1" ;
        sh:group        eq452:EQ452 ;
        sh:path         cim:CurveData.Curve ;
        sh:order        26 ;
        sh:severity     sh:Violation .
        
    
eq452:CurveData-equationY1Sparql
		a         sh:SPARQLConstraint ;  
		sh:message "The following is not fulfilled: CurveData.xvalue^2+CurveData.y1value^2 shall be less than or equal to RotatingMachine.ratedS^2."  ;
		sh:prefixes cim: ;
		sh:select """
	    SELECT $this ?value 
      WHERE {
        $this $PATH ?value .
        ?value rdf:type cim:ReactiveCapabilityCurve .
        $this cim:CurveData.xvalue ?xvalue .
        $this cim:CurveData.y1value ?y1value  .
        #BIND (EXISTS{?value ^cim:SynchronousMachine.InitialReactiveCapabilityCurve/cim:RotatingMachine.ratedS ?rateds} AS ?smrateds).
        ?value ^cim:SynchronousMachine.InitialReactiveCapabilityCurve/cim:RotatingMachine.ratedS ?rateds .
        #FILTER ( ?smrateds=true && (?xvalue*?xvalue+?y1value*?y1value)>?rateds*?rateds) .
        FILTER ( (?xvalue*?xvalue+?y1value*?y1value)>?rateds*?rateds) .
        } """ . 


eq452:CurveData-reactive
        a               sh:PropertyShape ;
        sh:sparql       eq452:CurveData-reactiveSparql ;
        sh:path         rdf:type ;
        sh:description  "If CurveData.Curve is a ReactiveCapabilityCurve, the CurveData.y2value shall be greater than or equal to CurveData.y1value.It is not allowed that all CurveData.y2value values are equal to CurveData.y1value values." ;
        sh:name         "C:452:EQ:CurveData.Curve:reactive" ;
        sh:group        eq452:EQ452 ;
        sh:order        27 ;
        sh:severity     sh:Violation .
        
    
eq452:CurveData-reactiveSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Either CurveData.y2value is not >= CurveData.y1value or CurveData.y2value = CurveData.y1value for all curve points."  ;
		sh:prefixes cim: ;
		sh:select """
	    SELECT $this ?value ?countcd ?sumy1v ?sumy2v
      WHERE {
        {
        SELECT $this (COUNT(?curvedtype) AS ?countcd) (SUM(?y1v) AS ?sumy1v) (SUM(?y2v) AS ?sumy2v)
        WHERE {
        $this cim:CurveData.Curve/rdf:type cim:ReactiveCapabilityCurve .
        $this cim:CurveData.Curve/^cim:CurveData.Curve ?curved .
        #$this cim:CurveData.Curve ?rcc .
        #?rcc rdf:type ?curvetype .
        #?rcc ^cim:CurveData.Curve ?curved .
        ?curved rdf:type ?curvedtype .
        ?curved cim:CurveData.y1value ?y1v.
        ?curved cim:CurveData.y2value ?y2v.
        #OPTIONAL {?curved cim:CurveData.y2value ?y2v }.
        #FILTER(bound(?y2v)).
        }
        GROUP BY $this ?curvedtype
        }
        
        $this cim:CurveData.Curve ?value .
        #?value rdf:type ?curvetype .
        ?value rdf:type cim:ReactiveCapabilityCurve .
        $this cim:CurveData.y1value ?y1value  .
        $this cim:CurveData.y2value ?y2value.
        #OPTIONAL {$this cim:CurveData.y2value ?y2value }.
        #FILTER (?curvetype=cim:ReactiveCapabilityCurve && bound(?y2value) && (?y2value<?y1value || (?y2value=?sumy1v/?countcd && ?y1value=?sumy2v/?countcd ))) .
        FILTER ((?y2value<?y1value || (?y2value=?sumy1v/?countcd && ?y1value=?sumy2v/?countcd ))) .
        } """ . 


eq452:CurveData.xvalue-value
        a               sh:PropertyShape ;
        sh:sparql       eq452:CurveData.xvalue-valueSparql ;
        sh:path         rdf:type ;
        sh:description  "The GeneratingUnit.minOperatingP shall be equal of the minimum of the CurveData.xvalue among all points defined for a ReactveCapabilityCurve. The GeneratingUnit.maxOperatingP shall be equal of the maximum of the CurveData.xvalue among all points defined for a ReactveCapabilityCurve." ;
        sh:name         "C:452:EQ:CurveData.xvalue:value" ;
        sh:group        eq452:EQ452 ;
        sh:order        28 ;
        sh:severity     sh:Violation .
        
    
eq452:CurveData.xvalue-valueSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The CurveData.xvalue for ReactveCapabilityCurve are not consistent with GeneratingUnit.minOperatingP and GeneratingUnit.maxOperatingP."  ;
		sh:prefixes cim: ;
		sh:select """
	    SELECT $this ?value
      WHERE {      
        $this cim:RotatingMachine.GeneratingUnit/cim:GeneratingUnit.minOperatingP ?minp.
        $this cim:RotatingMachine.GeneratingUnit/cim:GeneratingUnit.maxOperatingP ?maxp.
        #OPTIONAL {$this cim:RotatingMachine.GeneratingUnit/cim:GeneratingUnit.minOperatingP ?minp } .
        #OPTIONAL {$this cim:RotatingMachine.GeneratingUnit/cim:GeneratingUnit.maxOperatingP ?maxp } .
        #OPTIONAL {$this cim:SynchronousMachine.InitialReactiveCapabilityCurve ?rcc } .
        BIND(EXISTS{$this cim:SynchronousMachine.InitialReactiveCapabilityCurve ?rcca} AS ?hasrcc).
        
        {
        SELECT $this (MAX(?xvalue) AS ?maxxvalue)  (MIN(?xvalue) AS ?minxvalue)
          WHERE {
            #OPTIONAL {?rcc1 ^cim:SynchronousMachine.InitialReactiveCapabilityCurve $this } .
            #?rcc1 ^cim:CurveData.Curve ?curvedata .
            $this cim:SynchronousMachine.InitialReactiveCapabilityCurve/^cim:CurveData.Curve ?curvedata .
            #BIND(EXISTS{$this cim:SynchronousMachine.InitialReactiveCapabilityCurve/^cim:CurveData.Curve ?curvedataa} AS ?hascurvedata).
            ?curvedata rdf:type ?cdtype .
            ?curvedata cim:CurveData.xvalue ?xvalue .
            #FILTER (?hascurvedata=true && ?cdtype=cim:CurveData ) .
            FILTER (?cdtype=cim:CurveData ) .
          }
          GROUP BY $this ?cdtype
        }

        #FILTER ((?hasrcc=true && bound(?minp) && bound(?maxp) && ?maxp!=?maxxvalue && ?minp!=?minxvalue)) .
        FILTER (?hasrcc=true && !(?maxp=?maxxvalue && ?minp=?minxvalue)) .
        } """ .
 
 
eq452:SynchronousMachine-reactiveLimits
        a               sh:PropertyShape ;
        sh:sparql       eq452:SynchronousMachine-reactiveLimitsSparql ;
        sh:path         rdf:type ;
        sh:description  "ReactiveCapabilityCurve-s are not required if the reactive power limits of the SynchronousMachine do not vary with real power output. SynchronousMachine.minQ and SynchronousMachine.maxQ are required if SynchronousMachine.InitialReactiveCapabilityCurve is missing. If the association SynchronousMachine.InitialReactiveCapabilityCurve is provided it takes precedence to the information provided by the attributes SynchronousMachine.minQ and SynchronousMachine.maxQ. However, if both SynchronousMachine.minQ, SynchronousMachine.maxQ and ReactiveCapabilityCurve are present, the SynchronousMachine.minQ shall be equal to min of CurveData.y1value-s and SynchronousMachine.maxQ shall be equal to max CurveData.y2value-s." ;
        sh:name         "C:452:EQ:SynchronousMachine:reactiveLimits" ;
        sh:group        eq452:EQ452 ;
        sh:order        29 ;
        sh:severity     sh:Violation .
        
    
eq452:SynchronousMachine-reactiveLimitsSparql
		a         sh:SPARQLConstraint ;  
		sh:message "One of the following is not fulfilled: 1)Neither SynchronousMachine.minQ,  SynchronousMachine.maxQ nor SynchronousMachine.InitialReactiveCapabilityCurve are provided 2) Either SynchronousMachine.minQ is not equal to min of CurveData.y1value-s or  SynchronousMachine.maxQ is not equal to max CurveData.y2value-s." ;
		sh:prefixes cim: ;
		sh:select """
        SELECT $this 
      WHERE {
        OPTIONAL {$this cim:SynchronousMachine.minQ ?minq } .
        OPTIONAL {$this cim:SynchronousMachine.maxQ ?maxq } .
        #OPTIONAL {$this cim:SynchronousMachine.InitialReactiveCapabilityCurve ?rcc } .
        BIND(EXISTS{$this cim:SynchronousMachine.InitialReactiveCapabilityCurve ?rcca} AS ?hasrcc).
        
        {
        SELECT $this (MAX(?y2value) AS ?my2value)  (MIN(?y1value) AS ?my1value)
          WHERE {
            #OPTIONAL {?rcc1 ^cim:SynchronousMachine.InitialReactiveCapabilityCurve $this } .
            #?rcc1 ^cim:CurveData.Curve ?curvedata .
            $this cim:SynchronousMachine.InitialReactiveCapabilityCurve/^cim:CurveData.Curve ?curvedata .
            #BIND(EXISTS{$this cim:SynchronousMachine.InitialReactiveCapabilityCurve/^cim:CurveData.Curve ?curvedataa} AS ?hascurvedata).
            ?curvedata rdf:type ?cdtype .
            ?curvedata cim:CurveData.y1value ?y1value .
            ?curvedata cim:CurveData.y2value ?y2value .
            #FILTER (?hascurvedata=true && ?cdtype=cim:CurveData ) .
            FILTER (?cdtype=cim:CurveData ) .
          }
          GROUP BY $this ?cdtype
        }

        FILTER ((?hasrcc=false && !(bound(?minq) && bound(?maxq))) || (?hasrcc=true && bound(?minq) && bound(?maxq) && !(?maxq=?my2value && ?minq=?my1value))) .
        } """ .
        
        
eq452:RegulatingControl-RegulatingEquipment
        a               sh:PropertyShape ;
        sh:description  "A RegulatingControl that is not a TapChangerControl must have at least one regulating equipment associated through the RegulatingCondEq.RegulatingControl. That is, a RegulatingControl cannot exist without some equipment using it for regulating." ;
        sh:message      "The RegulatingControl is not associated with an Equpment via RegulatingCondEq.RegulatingControl."  ;
        sh:name         "C:452:EQ:RegulatingControl:RegulatingEquipment" ;
        sh:path         [sh:inversePath  cim:RegulatingCondEq.RegulatingControl] ;
        sh:minCount     1;
        sh:group        eq452:EQ452 ;
        sh:order        30 ;
        sh:severity     sh:Violation .        
          
        
eq452:ShuntCompensator.voltageSensitivity-valueRange
        a               sh:PropertyShape ;
        sh:description  "The ShuntCompensator.voltageSensitivity attribute shall be greater than zero." ;
        sh:name         "C:452:EQ:ShuntCompensator.voltageSensitivity:valueRange" ;
        sh:group        eq452:EQ452 ;
        sh:order        31 ;
        sh:message       "The value is negative or zero." ;
        sh:minExclusive  "0.0"^^xsd:float ;
        sh:path          cim:ShuntCompensator.voltageSensitivity ;
        sh:severity      sh:Violation .      
    

eq452:SynchronousMachine.type-condenser
        a               sh:PropertyShape ;
        sh:sparql       eq452:SynchronousMachine.type-condenserSparql ;
        sh:description  "The SynchronousMachine is not required to be associated with a GeneratingUnit via the association RotatingMachine.GeneratingUnit in cases where a synchronous condenser is being modelled as there is no capability for real power output. In this case, the SynchronousMachine.type shall be set to condenser. The following SynchronousMachine.type-s: motorOrCondenser, generatorOrCondenser, and generatorOrCondenserOrMotor are not allowed to use." ;
        sh:name         "C:452:EQ:SynchronousMachine.type:condenser" ;
        sh:path         cim:SynchronousMachine.type ;
        sh:group        eq452:EQ452 ;
        sh:order        32 ;
        sh:severity     sh:Info .
        
    
eq452:SynchronousMachine.type-condenserSparql
		a         sh:SPARQLConstraint ;  
		sh:message "SynchronousMachine of type condenser with associated GeneratingUnit." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this ?value 
        WHERE {
        $this $PATH ?value .
        $this $PATH cim:SynchronousMachineKind.condenser  .
        OPTIONAL {$this cim:RotatingMachine.GeneratingUnit ?genunit } .
        #BIND(EXISTS{$this cim:RotatingMachine.GeneratingUnit ?genunit} AS ?opt).
        #FILTER (?opt=true && ?value=cim:SynchronousMachineKind.condenser ).
        FILTER (bound(?genunit) ).
        }""" . 
        
eq452:Switch-connection
        a               sh:PropertyShape ;
        sh:sparql       eq452:Switch-connectionSparql ;
        sh:path         rdf:type ;
        sh:description  "Switch and its subclasses shall only connect to ConnectivityNode-s that are contained in either the same VoltageLevel or in different VoltageLevel-s which have the same BaseVoltage." ;
        sh:name         "C:452:EQ:Switch:connection" ;
        sh:group        eq452:EQ452 ;
        sh:order        33 ;
        sh:severity     sh:Violation .
        
    
eq452:Switch-connectionSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Switch (or its subclasses) connects ConnectivityNode-s that are not contained in either the same VoltageLevel or in different VoltageLevel-s which have the same BaseVoltage." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this  
        WHERE {
        {
          SELECT $this ?cnc2 ?cnc1
          WHERE {
            ?term1 cim:Terminal.ConductingEquipment $this .
            ?term2 cim:Terminal.ConductingEquipment $this .
            ?term1 cim:ACDCTerminal.sequenceNumber 1 .
            ?term2 cim:ACDCTerminal.sequenceNumber 2 .
            #OPTIONAL {?term1 cim:Terminal.ConnectivityNode ?cn1 } .
            #OPTIONAL {?cn1 cim:ConnectivityNode.ConnectivityNodeContainer ?cnc1 } .
            ?term1 cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer ?cnc1 .
            #BIND(EXISTS{?term1 cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer ?cnc1a} AS ?hascnc1).
            #OPTIONAL {?term2 cim:Terminal.ConnectivityNode ?cn2 } .
            #OPTIONAL {?cn2 cim:ConnectivityNode.ConnectivityNodeContainer ?cnc2 } .
            ?term2 cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer ?cnc2 .
            #BIND(EXISTS{?term2 cim:Terminal.ConnectivityNode/cim:ConnectivityNode.ConnectivityNodeContainer ?cnc2a} AS ?hascnc2).
            #FILTER (?hascnc1=true && ?hascnc2=true).
            }
        }
        
        OPTIONAL {?cnc1 cim:Bay.VoltageLevel/cim:VoltageLevel.BaseVoltage/cim:BaseVoltage.nominalVoltage ?cn1nv } .
        OPTIONAL {?cnc1 cim:VoltageLevel.BaseVoltage/cim:BaseVoltage.nominalVoltage ?cn1nv } .
        OPTIONAL {?cnc1 ^cim:VoltageLevel.Substation/cim:VoltageLevel.BaseVoltage/cim:BaseVoltage.nominalVoltage ?cn1nv } .
        OPTIONAL {?cnc1 cim:DCConverterUnit.Substation/^cim:VoltageLevel.Substation/cim:VoltageLevel.BaseVoltage/cim:BaseVoltage.nominalVoltage ?cn1nv } .

        
        OPTIONAL {?cnc2 cim:Bay.VoltageLevel/cim:VoltageLevel.BaseVoltage/cim:BaseVoltage.nominalVoltage ?cn2nv } .
        OPTIONAL {?cnc2 cim:VoltageLevel.BaseVoltage/cim:BaseVoltage.nominalVoltage ?cn2nv } .
        OPTIONAL {?cnc2 ^cim:VoltageLevel.Substation/cim:VoltageLevel.BaseVoltage/cim:BaseVoltage.nominalVoltage ?cn2nv } .
        OPTIONAL {?cnc2 cim:DCConverterUnit.Substation/^cim:VoltageLevel.Substation/cim:VoltageLevel.BaseVoltage/cim:BaseVoltage.nominalVoltage ?cn2nv } .
        
        #FILTER (bound(?cn1) && bound(?cn2) && bound(?cn1nv) && bound(?cn2nv) && ?cn1nv!=?cn2nv).
        FILTER (bound(?cn1nv) && bound(?cn2nv) && ?cn1nv!=?cn2nv).
        }""" .        


eq452:OperationalLimitSet-limits
        a               sh:PropertyShape ;
        sh:sparql       eq452:OperationalLimitSet-limitsSparql;
        sh:path         rdf:type ;
        sh:description  "In case the OperationalLimitSet is the operational limit of the AuxiliaryEquipment, then the association end OperationalLimitSet.Equipment is also required. In the case where OperationalLimitSet.Equipment is associated with an instance of ConductingEquipment, OperationalLimitSet.Terminal shall be one of the ConductingEquipment’s Terminal-s." ;  
        sh:name         "C:452:EQ:OperationalLimitSet:limits" ;
        sh:order        34 ;
        sh:group        eq452:EQ452 ;
        sh:severity     sh:Violation .
        
    
eq452:OperationalLimitSet-limitsSparql
		a         sh:SPARQLConstraint ;  
    sh:message    "Either OperationalLimitSet.Equipment is not provided for a Terminal that is associated with AuxiliaryEquipment or in case of ConductingEquipment the OperationalLimitSet.Terminal is not one of the the ConductingEquipment’s Terminal-s." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT DISTINCT $this ?value
        WHERE {
          $this cim:OperationalLimitSet.Terminal ?olsterm .
          OPTIONAL{$this cim:OperationalLimitSet.Terminal/^cim:AuxiliaryEquipment.Terminal ?auxeq } .
          OPTIONAL{$this cim:OperationalLimitSet.Equipment ?equipment .
                   ?equipment rdf:type ?value .
                   BIND(EXISTS{?equipment ^cim:Terminal.ConductingEquipment ?olsterm} AS ?termmatch).
                  }.
          
          FILTER ((!bound(?equipment) && bound(?auxeq)) ||
                  (bound(?equipment) && ?termmatch=false && ?value NOT IN (cim:CurrentTransformer, cim:PotentialTransformer, cim:PostLineSensor, cim:SurgeArrester, cim:WaveTrap, cim:FaultIndicator, cim:PowerElectronicsWindUnit, cim:PhotoVoltaicUnit, cim:BatteryUnit, cim:HydroPump, cim:GeneratingUnit, cim:HydroGeneratingUnit, cim:NuclearGeneratingUnit, cim:SolarGeneratingUnit, cim:ThermalGeneratingUnit, cim:WindGeneratingUnit, cim:Equipment) )
                   ).
        }""" . 

        
eq452:EQ452containment
        a           sh:PropertyGroup ;
        rdfs:label  "IEC61970-452-EQ-containment" ;
        sh:order    0 .

eq452:AuxiliaryEquipment
        a               sh:NodeShape ;
        sh:property     eq452:AuxiliaryEquipment-containment ;
        sh:targetClass  cim:CurrentTransformer, cim:PotentialTransformer, cim:PostLineSensor, cim:SurgeArrester, cim:WaveTrap, cim:FaultIndicator .  
        
eq452:AuxiliaryEquipment-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:Line);
        sh:description  "For AuxilaryEquipment (CurrentTransformer, PotentialTransformer, PostLineSensor, SurgeArrester, WaveTrap, FaultIndicator) the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay or Line." ;
        sh:message      "The containment is either missing or it is not Bay or Line." ;
        sh:name         "C:452:EQ:AuxilaryEquipment:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        0 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .        
    
eq452:EnergyConnection
        a               sh:NodeShape ;
        sh:property     eq452:EnergyConnection-containment ;
        sh:targetClass  cim:EnergySource, cim:EnergyConsumer, cim:NonConformLoad, cim:ConformLoad, cim:LinearShuntCompensator, cim:NonlinearShuntCompensator, cim:ExternalNetworkInjection, cim:StaticVarCompensator, cim:SynchronousMachine, cim:AsynchronousMachine .  
        
eq452:EnergyConnection-containment
        a               sh:PropertyShape ;
        sh:in        (cim:VoltageLevel) ;
        sh:description  "For EnergyConnection (EnergySource, EnergyConsumer, NonConformLoad, ConformLoad, LinearShuntCompensator, NonlinearShuntCompensator, ExternalNetworkInjection, StaticVarCompensator, SynchronousMachine, AsynchronousMachine) the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type VoltageLevel." ;
        sh:message      "The containment is either missing or it is not VoltageLevel." ;
        sh:name         "C:452:EQ:EnergyConnection:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        1 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .  

eq452:ProtectedSwitch
        a               sh:NodeShape ;
        sh:property     eq452:ProtectedSwitch-containment ;
        sh:targetClass  cim:Breaker, cim:DisconnectingCircuitBreaker, cim:LoadBreakSwitch .  
        
eq452:ProtectedSwitch-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:VoltageLevel cim:DCConverterUnit);
        sh:description  "For ProtectedSwitch (Breaker, DisconnectingCircuitBreaker, LoadBreakSwitch) the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay, VoltageLevel or DCConverterUnit." ;
        sh:message      "The containment is either missing or it is not Bay, VoltageLevel or DCConverterUnit." ;
        sh:name         "C:452:EQ:ProtectedSwitch:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        2 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .        
        
eq452:Ground
        a               sh:NodeShape ;
        sh:property     eq452:Ground-containment ;
        sh:targetClass  cim:Ground .  
        
eq452:Ground-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:VoltageLevel );
        sh:description  "For Ground the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay or VoltageLevel." ;
        sh:message      "The containment is either missing or it is not Bay or VoltageLevel." ;
        sh:name         "C:452:EQ:Ground:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        3 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .    

eq452:EarthFaultCompensator
        a               sh:NodeShape ;
        sh:property     eq452:EarthFaultCompensator-containment ;
        sh:targetClass  cim:GroundingImpedance, cim:PetersenCoil .  
        
eq452:EarthFaultCompensator-containment
        a               sh:PropertyShape ;
        sh:in           (cim:VoltageLevel) ;
        sh:description  "For EarthFaultCompensator (GroundingImpedance, PetersenCoil) the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type VoltageLevel." ;
        sh:message      "The containment is either missing or it is not VoltageLevel." ;
        sh:name         "C:452:EQ:EarthFaultCompensator:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        4 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .    

eq452:Conductor
        a               sh:NodeShape ;
        sh:property     eq452:Conductor-containment ;
        sh:targetClass  cim:ACLineSegment .  
        
eq452:Conductor-containment
        a               sh:PropertyShape ;
        sh:in           (cim:Line) ;
        sh:description  "For Conductor (ACLineSegment) the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Line." ;
        sh:message      "The containment is either missing or it is not Line." ;
        sh:name         "C:452:EQ:Conductor:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        5 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .    

eq452:SeriesCompensator
        a               sh:NodeShape ;
        sh:property     eq452:SeriesCompensator-containment ;
        sh:targetClass  cim:SeriesCompensator .  
        
eq452:SeriesCompensator-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Line cim:VoltageLevel cim:DCConverterUnit);
        sh:description  "For SeriesCompensator the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type VoltageLevel when in substation, DCConverterUnit or Line when outside substation." ;
        sh:message      "The containment is either missing or it is not VoltageLevel, Line or DCConverterUnit." ;
        sh:name         "C:452:EQ:SeriesCompensator:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        6 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .   

eq452:BusbarSection
        a               sh:NodeShape ;
        sh:property     eq452:BusbarSection-containment ;
        sh:targetClass  cim:BusbarSection .  
        
eq452:BusbarSection-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:VoltageLevel );
        sh:description  "For BusbarSection the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type VoltageLevel or Bay (when a disconnector is splitting a busbar section in two)." ;
        sh:message      "The containment is either missing or it is not Bay or VoltageLevel." ;
        sh:name         "C:452:EQ:BusbarSection:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        7 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation . 

eq452:Junction
        a               sh:NodeShape ;
        sh:property     eq452:Junction-containment ;
        sh:targetClass  cim:Junction .  
        
eq452:Junction-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Line  cim:Bay cim:VoltageLevel );
        sh:description  "For Junction the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Line (in case they model T-junction of a Line), or VoltageLevel or Bay (in case they model named join locations within a Substation)." ;
        sh:message      "The containment is either missing or it is not Line, Bay or VoltageLevel." ;
        sh:name         "C:452:EQ:Junction:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        8 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .   
 
        
eq452:PowerTransformer-containment
        a               sh:PropertyShape ;
        sh:in           (  cim:Substation cim:DCConverterUnit  );
        sh:description  "For PowerTransformer the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Substation or DCConverterUnit. For the case of a transformer that connects two substations, the terminal of one of the PowerTransformerEnd-s can be connected to a ConnectivityNode defined in another substation." ;
        sh:message      "The containment is either missing or it is not Substation or DCConverterUnit." ;
        sh:name         "C:452:EQ:PowerTransformer:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        9 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .  

eq452:Disconnector
        a               sh:NodeShape ;
        sh:property     eq452:Disconnector-containment ;
        sh:targetClass  cim:Disconnector .  
        
eq452:Disconnector-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay  cim:VoltageLevel cim:DCConverterUnit cim:Line );
        sh:description  "For Disconnector the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay, VoltageLevel, DCConverterUnit or Line when outside substation." ;
        sh:message      "The containment is either missing or it is not Bay, VoltageLevel, DCConverterUnit or Line." ;
        sh:name         "C:452:EQ:Disconnector:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        10 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .       

eq452:GroundDisconnector
        a               sh:NodeShape ;
        sh:property     eq452:GroundDisconnector-containment ;
        sh:targetClass  cim:GroundDisconnector .  
        
eq452:GroundDisconnector-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:VoltageLevel cim:DCConverterUnit cim:Line );
        sh:description  "For GroundDisconnector the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay, VoltageLevel, DCConverterUnit or Line when outside substation." ;
        sh:message      "The containment is either missing or it is not Bay, VoltageLevel, DCConverterUnit or Line." ;
        sh:name         "C:452:EQ:GroundDisconnector:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        11 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .     

eq452:Fuse
        a               sh:NodeShape ;
        sh:property     eq452:Fuse-containment ;
        sh:targetClass  cim:Fuse .  
        
eq452:Fuse-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:VoltageLevel cim:DCConverterUnit cim:Line );
        sh:description  "For Fuse the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay, VoltageLevel, DCConverterUnit or Line when outside substation." ;
        sh:message      "The containment is either missing or it is not Bay, VoltageLevel, DCConverterUnit or Line." ;
        sh:name         "C:452:EQ:Fuse:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        12 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .        

eq452:Jumper
        a               sh:NodeShape ;
        sh:property     eq452:Jumper-containment ;
        sh:targetClass  cim:Jumper .  
        
eq452:Jumper-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:VoltageLevel cim:DCConverterUnit cim:Line );
        sh:description  "For Jumper the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay, VoltageLevel, DCConverterUnit or Line when outside substation." ;
        sh:message      "The containment is either missing or it is not Bay, VoltageLevel, DCConverterUnit or Line." ;
        sh:name         "C:452:EQ:Jumper:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        13 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .    

eq452:Cut
        a               sh:NodeShape ;
        sh:property     eq452:Cut-containment ;
        sh:targetClass  cim:Cut .  
        
eq452:Cut-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:VoltageLevel cim:DCConverterUnit cim:Line );
        sh:description  "For Cut the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay, VoltageLevel or DCConverterUnit or Line when outside substation." ;
        sh:message      "The containment is either missing or it is not Bay, VoltageLevel, DCConverterUnit or Line." ;
        sh:name         "C:452:EQ:Cut:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        14 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .          
        
eq452:Clamp
        a               sh:NodeShape ;
        sh:property     eq452:Clamp-containment ;
        sh:targetClass  cim:Clamp .  
        
eq452:Clamp-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:Bay cim:Line );
        sh:description  "For Clamp the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Bay or Line when outside substation." ;
        sh:message      "The containment is either missing or it is not Bay or Line." ;
        sh:name         "C:452:EQ:Clamp:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        15 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .     

eq452:GeneratingUnit-containmentNodeShape
        a               sh:NodeShape ;
        sh:property     eq452:GeneratingUnit-containment ;
        sh:targetClass  cim:SolarGeneratingUnit, cim:NuclearGeneratingUnit, cim:ThermalGeneratingUnit, cim:HydroGeneratingUnit, cim:WindGeneratingUnit , cim:GeneratingUnit.  
        
eq452:GeneratingUnit-containment
        a               sh:PropertyShape ;
        sh:in           (cim:Substation) ;
        sh:description  "For GeneratingUnit (SolarGeneratingUnit, NuclearGeneratingUnit, ThermalGeneratingUnit, HydroGeneratingUnit, WindGeneratingUnit) the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Substation." ;
        sh:message      "The containment is either missing or it is not Substation." ;
        sh:name         "C:452:EQ:GeneratingUnit:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        16 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .    

eq452:HydroPump
        a               sh:NodeShape ;
        sh:property     eq452:HydroPump-containment ;
        sh:targetClass  cim:HydroPump .  
        
eq452:HydroPump-containment
        a               sh:PropertyShape ;
        sh:in           (cim:Substation) ;
        sh:description  "For HydroPump the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type Substation." ;
        sh:message      "The containment is either missing or it is not Substation." ;
        sh:name         "C:452:EQ:HydroPump:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        17 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation . 

eq452:EquivalentInjection
        a               sh:NodeShape ;
        sh:property     eq452:EquivalentInjection-containment ;
        sh:targetClass  cim:EquivalentInjection .  
        
eq452:EquivalentInjection-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:VoltageLevel cim:Line );
        sh:description  "For EquivalentInjection the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type VoltageLevel or Line." ;
        sh:message      "The containment is either missing or it is not VoltageLevel or Line." ;
        sh:name         "C:452:EQ:EquivalentInjection:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        18 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .    

eq452:EquivalentShunt
        a               sh:NodeShape ;
        sh:property     eq452:EquivalentShunt-containment ;
        sh:targetClass  cim:EquivalentShunt .  
        
eq452:EquivalentShunt-containment
        a               sh:PropertyShape ;
        sh:in           (cim:VoltageLevel) ;
        sh:description  "For EquivalentShunt the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type VoltageLevel." ;
        sh:message      "The containment is either missing or it is not VoltageLevel." ;
        sh:name         "C:452:EQ:EquivalentShunt:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        19 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .   

eq452:EquivalentBranch
        a               sh:NodeShape ;
        sh:property     eq452:EquivalentBranch-containment ;
        sh:targetClass  cim:EquivalentBranch .  
        
eq452:EquivalentBranch-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:VoltageLevel cim:Line cim:Substation );
        sh:description  "For EquivalentBranch the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type VoltageLevel, Line or Substation." ;
        sh:message      "The containment is either missing or it is not VoltageLevel, Line or Substation." ;
        sh:name         "C:452:EQ:EquivalentBranch:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        20 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .  

eq452:DCSwitch
        a               sh:NodeShape ;
        sh:property     eq452:DCSwitch-containment ;
        sh:targetClass  cim:DCDisconnector, cim:DCBreaker .  
        
eq452:DCSwitch-containment
        a               sh:PropertyShape ;
        sh:in           (cim:DCConverterUnit) ;
        sh:description  "For DCSwitch (DCDisconnector, DCBreaker) the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type DCConverterUnit." ;
        sh:message      "The containment is either missing or it is not DCConverterUnit." ;
        sh:name         "C:452:EQ:DCSwitch:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        21 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .     

eq452:DCGround
        a               sh:NodeShape ;
        sh:property     eq452:DCGround-containment ;
        sh:targetClass  cim:DCGround .  
        
eq452:DCGround-containment
        a               sh:PropertyShape ;
        sh:in           (cim:DCConverterUnit) ;
        sh:description  "For DCGround the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type DCConverterUnit." ;
        sh:message      "The containment is either missing or it is not DCConverterUnit." ;
        sh:name         "C:452:EQ:DCGround:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        22 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .   

eq452:DCBusbar
        a               sh:NodeShape ;
        sh:property     eq452:DCBusbar-containment ;
        sh:targetClass  cim:DCBusbar .  
        
eq452:DCBusbar-containment
        a               sh:PropertyShape ;
        sh:in           (cim:DCConverterUnit) ;
        sh:description  "For DCBusbar the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type DCConverterUnit." ;
        sh:message      "The containment is either missing or it is not DCConverterUnit." ;
        sh:name         "C:452:EQ:DCBusbar:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        23 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .    

eq452:DCChopper
        a               sh:NodeShape ;
        sh:property     eq452:DCChopper-containment ;
        sh:targetClass  cim:DCChopper .  
        
eq452:DCChopper-containment
        a               sh:PropertyShape ;
        sh:in           (cim:DCConverterUnit) ;
        sh:description  "For DCChopper the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type DCConverterUnit." ;
        sh:message      "The containment is either missing or it is not DCConverterUnit." ;
        sh:name         "C:452:EQ:DCChopper:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        24 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .      

eq452:DCShunt
        a               sh:NodeShape ;
        sh:property     eq452:DCShunt-containment ;
        sh:targetClass  cim:DCShunt .  
        
eq452:DCShunt-containment
        a               sh:PropertyShape ;
        sh:in           (cim:DCConverterUnit) ;
        sh:description  "For DCShunt the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type DCConverterUnit." ;
        sh:message      "The containment is either missing or it is not DCConverterUnit." ;
        sh:name         "C:452:EQ:DCShunt:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        25 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .  

eq452:DCSeriesDevice
        a               sh:NodeShape ;
        sh:property     eq452:DCSeriesDevice-containment ;
        sh:targetClass  cim:DCSeriesDevice .  
        
eq452:DCSeriesDevice-containment
        a               sh:PropertyShape ;
        sh:in           (cim:DCConverterUnit) ;
        sh:description  "For DCSeriesDevice the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type DCConverterUnit." ;
        sh:message      "The containment is either missing or it is not DCConverterUnit." ;
        sh:name         "C:452:EQ:DCSeriesDevice:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        26 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .      

eq452:DCLineSegment
        a               sh:NodeShape ;
        sh:property     eq452:DCLineSegment-containment ;
        sh:targetClass  cim:DCLineSegment .  
        
eq452:DCLineSegment-containment
        a               sh:PropertyShape ;
        sh:in           ( cim:DCLine cim:Substation );
        sh:description  "For DCLineSegment the association Equipment.EquipmentContainer is required and shall point to EquipmentContainer of type DCLine. In the case of modelling back to back configuration the association shall point to EquipmentContainer of type Substation." ;
        sh:message      "The containment is either missing or it is not DCLine or Substation." ;
        sh:name         "C:452:EQ:DCLineSegment:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        27 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .   

eq452:ACDCConverter
        a               sh:NodeShape ;
        sh:property     eq452:ACDCConverter-containment, eq452:DCConverterUnit.Substation-containment ;
        sh:targetClass  cim:CsConverter, cim:VsConverter .  
        
eq452:ACDCConverter-containment
        a               sh:PropertyShape ;
        sh:in           (cim:DCConverterUnit) ;
        sh:description  "For ACDCConverter (CsConverter, VsConverter) the association Equipment.EquipmentContainer is required and shall point to DCEquipmentContainer of type DCConverterUnit. In this case the association DCConverterUnit.Substation is required." ;
        sh:message      "The containment is either missing or it is not DCConverterUnit." ;
        sh:name         "C:452:EQ:ACDCConverter:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer rdf:type);
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        28 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .  

eq452:DCConverterUnit.Substation-containment
        a               sh:PropertyShape ;
        sh:in           (cim:Substation) ;
        sh:description  "For ACDCConverter (CsConverter, VsConverter) the association Equipment.EquipmentContainer is required and shall point to DCEquipmentContainer of type DCConverterUnit. In this case the association DCConverterUnit.Substation is required." ;
        sh:message      "The DCConverterUnit.Substation association is either missing or not pointing to a Substation." ;
        sh:name         "C:452:EQ:ACDCConverter:containment" ;
        sh:path         (cim:Equipment.EquipmentContainer cim:DCConverterUnit.Substation rdf:type) ;
        sh:maxCount     1 ;
        sh:minCount     1 ;
        sh:order        29 ;
        sh:group        eq452:EQ452containment ;
        sh:severity     sh:Violation .                
        
        
eq452:TapChangerControl-remoteQcontrol
        a               sh:PropertyShape ;
        sh:sparql       eq452:TapChangerControl-remoteQcontrolSparql ;
        sh:path         rdf:type ;
        sh:description  "A power transformer cannot efficiently control reactive power flow on remote terminals. Therefore, a TapChangerControl controlling reactive power flow shall only control the flow at one of the Terminal-s associated with PowerTransformerEnd-s of the PowerTransformer where the TapChanger is located. Control of a remote Terminal not associated with the PowerTransformer that has the TapChanger is not allowed. This constraint defines that multiple TapChanger-s cannot be controlled by the same TapChangerControl." ;
        sh:name         "C:452:EQ:TapChangerControl:remoteQcontrol" ;
        sh:group        eq452:EQ452 ;
        sh:order        35 ;
        sh:severity     sh:Violation .
        
    
eq452:TapChangerControl-remoteQcontrolSparql
		a         sh:SPARQLConstraint ;  
		sh:message "TapChangerControl with RegulatingControl.mode equals reactivePower controls a Terminal which is not associated with PowerTransformerEnd-s of the PowerTransformer where the TapChanger is located." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this  
        WHERE {
          $this cim:RegulatingControl.mode ?mode .
          $this cim:RegulatingControl.Terminal ?rcterm .
          OPTIONAL {$this ^cim:TapChanger.TapChangerControl/cim:RatioTapChanger.TransformerEnd/cim:TransformerEnd.Terminal ?tcterm1 }.
          OPTIONAL {$this ^cim:TapChanger.TapChangerControl/cim:PhaseTapChanger.TransformerEnd/cim:TransformerEnd.Terminal ?tcterm2 }.
        
          FILTER (?mode=cim:RegulatingControlModeKind.reactivePower && ((?rcterm!=?tcterm1 && !bound(?tcterm2) && bound(?tcterm1)) || (?rcterm!=?tcterm2 && !bound(?tcterm1) && bound(?tcterm2)))).
        }""" . 

  
eq452:ReactiveCapabilityCurve-xvalue
        a               sh:PropertyShape ;
        sh:sparql       eq452:ReactiveCapabilityCurve-xvalueSparql ;
        sh:path         rdf:type ;
        sh:description  "All CurveData.xvalue for a given ReactiveCapabilityCurve shall be unique, e.g. it is not allowed for two or more .xvalue to have the same float value for a given ReactiveCapabilityCurve." ;
        sh:name         "C:452:EQ:ReactiveCapabiltyCurve.CurveData:xvalue" ;
        sh:group        eq452:EQ452 ;
        sh:order        36 ;
        sh:severity     sh:Violation .
        
    
eq452:ReactiveCapabilityCurve-xvalueSparql
		a         sh:SPARQLConstraint ;  
		sh:message "CurveData.xvalue for a given ReactiveCapabilityCurve are not unique." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this  
        WHERE {
          {
          SELECT $this (COUNT(?xvalue1) AS ?c1)
          WHERE {
              $this ^cim:CurveData.Curve/cim:CurveData.xvalue ?xvalue1.
            }
            GROUP BY $this ?xvalue1
          }
          
          {
          SELECT DISTINCT $this (COUNT(?xvalue2) AS ?c2)
          WHERE {
              $this ^cim:CurveData.Curve/cim:CurveData.xvalue ?xvalue2.
            }
            GROUP BY $this ?xvalue2
          }

          FILTER (?c1!=?c2).
        }
        LIMIT 1
        """ .  
        
        
eq452:PowerTransformerEnd.x-value
        a               sh:PropertyShape ;
        sh:sparql       eq452:PowerTransformerEnd.x-valueSparql ;
        sh:path         rdf:type ;
        sh:description  "Transformers with zero series reactance do not exist. PowerTransformerEnd.x of high voltage end in case of a two winding transformer shall be a positive value. In case of a three winding transformer the PowerTransformerEnd.x shall not be zero." ;
        sh:name         "C:452:EQ:PowerTransformerEnd.x:value" ;
        sh:group        eq452:EQ452 ;
        sh:order        37 ;
        sh:severity     sh:Violation .
        
    
eq452:PowerTransformerEnd.x-valueSparql
		a         sh:SPARQLConstraint ;  
		sh:message "One of of the following occurs: 1) The value is negative or zero for winding one a two-winding transformer. 2) The value is zero for a three-winding transformer." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT DISTINCT $this  
        WHERE {
          
          $this ^cim:PowerTransformerEnd.PowerTransformer ?end1 ; 
                ^cim:PowerTransformerEnd.PowerTransformer ?end2 ;
                ^cim:PowerTransformerEnd.PowerTransformer ?end3 .
          
          #?end1 cim:PowerTransformerEnd.PowerTransformer $this .
          #?end2 cim:PowerTransformerEnd.PowerTransformer $this .
          #?end3 cim:PowerTransformerEnd.PowerTransformer $this .
          ?end1 cim:TransformerEnd.endNumber 1.
          ?end2 cim:TransformerEnd.endNumber 2.
          ?end1 cim:PowerTransformerEnd.x ?x1 .
          ?end2 cim:PowerTransformerEnd.x ?x2 .
          #?end3 cim:TransformerEnd.endNumber 3 .
          #?end3 cim:PowerTransformerEnd.x ?x3 .
          OPTIONAL{?end3 cim:TransformerEnd.endNumber 3 .
                   ?end3 cim:PowerTransformerEnd.x ?x3 } .
          BIND(EXISTS{$this ^cim:PowerTransformerEnd.PowerTransformer/cim:TransformerEnd.endNumber 3 } AS ?threewin) .
          
          #FILTER ((!(?x1>0 && ?x2=0) && ?threewin=false )|| (?threewin=true && !(?x1!=0 && ?x2!=0 && ?x3!=0)) ).
          FILTER ((!(?x1>0 && ?x2=0) && ?threewin=false )|| (?threewin=true && !(?x1!=0 && ?x2!=0 && ?x3!=0)) ).
        } """ .         

eq452:GeneratingUnit.maxOperatingP-ratedS
        a               sh:PropertyShape ;
        sh:sparql       eq452:GeneratingUnit.maxOperatingP-ratedSSparql ;
        sh:path         rdf:type ;
        sh:description  "GeneratingUnit.maxOperatingP shall be less than or equal to the sum of RotatingMachine.ratedS for RotatingMachine-s associated to the GeneratingUnit." ;
        sh:name         "C:452:EQ:GeneratingUnit:maxOperatingP:ratedS" ;
        sh:group        eq452:EQ452 ;
        sh:order        38 ;
        sh:severity     sh:Violation .
        
    
eq452:GeneratingUnit.maxOperatingP-ratedSSparql
		a         sh:SPARQLConstraint ;  
		sh:message "GeneratingUnit.maxOperatingP is greater than the sum of RotatingMachine.ratedS for  RotatingMachine-s associated to GeneratingUnit." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this  ?value 
        WHERE {
          $this cim:GeneratingUnit.maxOperatingP ?value .
          {
          SELECT $this (SUM(?rmrateds) AS ?sumrs)
          WHERE {

             $this ^cim:RotatingMachine.GeneratingUnit/cim:RotatingMachine.ratedS ?rmrateds .
             
             #?rm cim:RotatingMachine.GeneratingUnit $this .
             #?rm rdf:type ?rmtype .
             #?rm cim:RotatingMachine.ratedS ?rmrateds.
             }
             #GROUP BY $this ?rmtype
             GROUP BY $this 
          }    
          FILTER (?value>?sumrs).
        } 
        """ .         
        
              
eq452:HydroGeneratingUnit.energyConversionCapability-typeConsistency
        a               sh:PropertyShape ;
        sh:sparql       eq452:HydroGeneratingUnit.energyConversionCapability-typeConsistencySparql ;
        sh:path         rdf:type ;
        sh:description  "If HydroGeneratingUnit.energyConversionCapability is generator the associated SynchronousMachine shall have SynchronousMachine.type set to generator or generatorOrCondenser. If HydroGeneratingUnit.energyConversionCapability is pumpAndGenerator the associated SynchronousMachine shall have SynchronousMachine.type set to motor, generatorOrMotor or generatorOrCondenserOrMotor." ;
        sh:name         "C:452:EQ:HydroGeneratingUnit.energyConversionCapability:typeConsistency" ;
        sh:group        eq452:EQ452 ;
        sh:order        39 ;
        sh:severity     sh:Violation .
        
    
eq452:HydroGeneratingUnit.energyConversionCapability-typeConsistencySparql
		a         sh:SPARQLConstraint ;  
		sh:message "The HydroGeneratingUnit.energyConversionCapability of the associated SynchronousMachine is not consistent with SynchronousMachine.type." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this  ?value
        WHERE {
          $this cim:HydroGeneratingUnit.energyConversionCapability ?value .
          #OPTIONAL {$this cim:HydroGeneratingUnit.energyConversionCapability ?value }.
          $this ^cim:RotatingMachine.GeneratingUnit/cim:SynchronousMachine.type ?type.
          #FILTER ((bound(?value) && ?value=cim:HydroEnergyConversionKind.generator && ?type NOT IN (cim:SynchronousMachineKind.generator, cim:SynchronousMachineKind.generatorOrCondenser ) ) || (bound(?value) && ?value=cim:HydroEnergyConversionKind.pumpAndGenerator && ?type NOT IN (cim:SynchronousMachineKind.motor, cim:SynchronousMachineKind.generatorOrMotor, cim:SynchronousMachineKind.generatorOrCondenserOrMotor) )).
          FILTER ((?value=cim:HydroEnergyConversionKind.generator && ?type NOT IN (cim:SynchronousMachineKind.generator, cim:SynchronousMachineKind.generatorOrCondenser ) ) || (?value=cim:HydroEnergyConversionKind.pumpAndGenerator && ?type NOT IN (cim:SynchronousMachineKind.motor, cim:SynchronousMachineKind.generatorOrMotor, cim:SynchronousMachineKind.generatorOrCondenserOrMotor) )).
        } """ .         
        
eq452:ConductingEquipment-twoTerminalsShape
        a               sh:NodeShape ;
        sh:property     eq452:Terminal-connection ;
        sh:targetClass  cim:ACLineSegment, cim:DCLineSegment , cim:DCSeriesDevice , cim:DCSwitch , cim:DCDisconnector , cim:DCBreaker , cim:DCChopper , cim:Switch, cim:Disconnector, cim:Fuse, cim:GroundDisconnector, cim:Jumper, cim:Breaker, cim:LoadBreakSwitch, cim:DisconnectingCircuitBreaker, cim:Cut, cim:SeriesCompensator,cim:EquivalentBranch.

eq452:Terminal-connection
        a               sh:PropertyShape ;
        sh:sparql       eq452:Terminal-connectionSparql ;
        sh:path         rdf:type ;
        sh:description  "Terminal-s of the two sides of a two-terminal ConductingEquipment (or any of its subclasses) shall not be connected to the same ConnectivityNode." ;
        sh:name         "C:452:EQ:Terminal:connection" ;
        sh:group        eq452:EQ452 ;
        sh:order        40 ;
        sh:severity     sh:Violation .
        
    
eq452:Terminal-connectionSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Terminal-s of a  two-terminal ConductingEquipment (or any of its subclasses) connect to the same ConnectivityNode." ;
		sh:prefixes cim: ;
		sh:select """
	      SELECT $this  ?value
        WHERE {
          ?term1 cim:Terminal.ConductingEquipment $this .
          ?term2 cim:Terminal.ConductingEquipment $this .

          ?term1 cim:ACDCTerminal.sequenceNumber 1 .
          ?term2 cim:ACDCTerminal.sequenceNumber 2 .
          
          ?term1 cim:Terminal.ConnectivityNode ?cn1 .         
          ?term2 cim:Terminal.ConnectivityNode ?cn2 .
          FILTER (?cn1=?cn2).
        } """ .         
        
        