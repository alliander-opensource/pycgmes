@base          <http://iec.ch/TC57/ns/CIM/SteadyStateHypothesis-EU/constraints/IEC61970-456/notSolved/3.0> .
@prefix eu:    <http://iec.ch/TC57/CIM100-European#> .
@prefix cims:  <http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix cim:   <http://iec.ch/TC57/CIM100#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix sshn456: <http://iec.ch/TC57/ns/CIM/SteadyStateHypothesis-EU/constraints/IEC61970-456/notSolved/3.0#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dash:  <http://datashapes.org/dash#> .
@prefix dct:    <http://purl.org/dc/terms/> .
@prefix dcat:    <http://www.w3.org/ns/dcat#> .


sshn456:Ontology  rdf:type         owl:Ontology ;
        dct:conformsTo        "urn:iso:std:iec:61970-501:draft:ed-2" , "urn:iso:std:iec:61970-600-2:ed-1" , "urn:iso:std:iec:61970-301:ed-7:amd1" , "file://iec61970cim17v40_iec61968cim13v13a_iec62325cim03v17a.eap" ;
        dct:creator           "ENTSO-E CIM EG"@en ;
        dct:description       "The constraints for SSH."@en ;
        dct:identifier        "urn:uuid:07b8020f-02ea-4a3a-9e29-5e863db65d32" ;
        dct:issued            "2022-05-13T12:09:21Z"^^xsd:dateTime ;
        dct:language          "en-GB" ;
        dct:modified          "2022-05-13"^^xsd:date ;
        dct:publisher         "ENTSO-E"@en ;
        dct:rights            "Copyright"@en ;
        dct:rightsHolder      "ENTSO-E"@en ;
        dct:title             "SSH not solved MAS Constraints"@en ;
        owl:versionIRI        <http://iec.ch/TC57/ns/CIM/SteadyStateHypothesis-EU/constraints/IEC61970-456/notSolved/3.0> ;
        owl:versionInfo       "3.0.1"@en ;
        dcat:landingPage      "https://www.entsoe.eu/digital/cim/cim-for-grid-models-exchange/" ;
        dcat:theme            "constraints"@en .
        
cim:    
    a           owl:Ontology ;
    owl:imports sh: ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100#"^^xsd:anyURI ;
        sh:prefix "cim" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
        sh:prefix "rdf" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100-European#"^^xsd:anyURI ;
        sh:prefix "eu" ;
    ] .

sshn456:NotSolved456
        a           sh:PropertyGroup ;
        rdfs:label  "NotSolved456" ;
        sh:order    0 .

sshn456:EquivalentInjection  a  sh:NodeShape ;
        sh:property     sshn456:EquivalentInjection-regulation ;
        sh:targetClass  cim:EquivalentInjection .

sshn456:EquivalentInjection-regulation
        a               sh:PropertyShape ;
        sh:sparql       sshn456:EquivalentInjection-regulationSparql ;
        sh:description  "If EquivalentInjection.regulationCapability in EQ is true, then EquivalentInjection.regulationStatus and EquivalentInjection.regulationTarget are required in SSH. If EquivalentInjection.regulationCapability in EQ is false, then EquivalentInjection.regulationStatus and EquivalentInjection.regulationTarget are not exchanged in SSH." ;
        sh:name         "C:456:SSH:EquivalentInjection:regulation" ;
        sh:path         cim:EquivalentInjection.regulationCapability ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        1 ;
        sh:severity     sh:Violation .
        
sshn456:EquivalentInjection-regulationSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Inconsistancy between EquivalentInjection.regulationCapability,  EquivalentInjection.regulationStatus and EquivalentInjection.regulationTarget. " ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value.
        OPTIONAL {$this cim:EquivalentInjection.regulationStatus ?rstatus}.
        OPTIONAL {$this cim:EquivalentInjection.regulationTarget ?rtarget}. 
        FILTER ((?value=true && (!bound(?rstatus) || !bound(?rtarget))) || (?value=false && (bound(?rstatus) || bound(?rtarget)))) .        
			}""" .
    
sshn456:RotatingMachine  a  sh:NodeShape ;
        sh:property     sshn456:RotatingMachine.p-limits , sshn456:RotatingMachine.q-limits;
        sh:targetClass  cim:AsynchronousMachine , cim:SynchronousMachine .


sshn456:RotatingMachine.p-limits
        a               sh:PropertyShape ;
        sh:sparql       sshn456:RotatingMachine.p-limitsSparql ;
        sh:description  "The negated value (necessary due to sign convention) of RotatingMachine.p shall be less than or equal to GeneratingUnit.maxOperatingP and shall be greater than or equal to GeneratingUnit.minOperatingP of the associated GeneratingUnit." ;
        sh:name         "C:456:SSH:RotatingMachine.p:limits" ;
        sh:path         cim:RotatingMachine.p ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        2 ;
        sh:severity     sh:Violation .
        
    
sshn456:RotatingMachine.p-limitsSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Active power is outside defined active power limits." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this cim:Equipment.inService true .
        $this cim:RotatingMachine.GeneratingUnit ?genunit.
        #BIND(EXISTS{$this cim:RotatingMachine.GeneratingUnit ?hasgenunit} AS ?hasgu).
        $this $PATH ?value .
        ?genunit cim:GeneratingUnit.maxOperatingP ?maxp . 
        ?genunit cim:GeneratingUnit.minOperatingP ?minp .
        FILTER (!(-?value<=?maxp && -?value>=?minp && ?value!=0) && !(?value<=?maxp && ?value>=?minp && ?value=0)) .        
        #FILTER (?hasgu=true && !(-?value<=?maxp && -?value>=?minp && ?value!=0) && !(?value<=?maxp && ?value>=?minp && ?value=0)) .        
			}""" .  

sshn456:RotatingMachine.q-limits
        a               sh:PropertyShape ;
        sh:sparql       sshn456:RotatingMachine.q-limitsSparql ;
        sh:description  "In case there is no ReactiveCapabilityCurve associated with the SynchronousMachine, the negated value (necessary due to sign convention) of RotatingMachine.q shall be less than or equal to SynchronousMachine.maxQ and shall be greater than or equal to SynchronousMachine.minQ." ;
        sh:name         "C:456:SSH:RotatingMachine.q:limits" ;
        sh:path         cim:RotatingMachine.q ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        3 ;
        sh:severity     sh:Violation .
        
    
sshn456:RotatingMachine.q-limitsSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Reactive power is outside defined reactive power limits." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this cim:Equipment.inService true .
        $this $PATH ?value .
        BIND(EXISTS{$this cim:SynchronousMachine.InitialReactiveCapabilityCurve ?curve} AS ?hascurve).
        #OPTIONAL {$this cim:SynchronousMachine.maxQ ?maxq}.
        #OPTIONAL {$this cim:SynchronousMachine.minQ ?minq}.
        $this cim:SynchronousMachine.maxQ ?maxq.
        $this cim:SynchronousMachine.minQ ?minq.
        #FILTER (?hascurve=false && bound(?maxq) && bound(?minq) && !(-?value<=?maxq && -?value>=?minq && ?value!=0) && !(?value<=?maxq && ?value>=?minq && ?value=0)) .  
        FILTER (?hascurve=false && !(-?value<=?maxq && -?value>=?minq && ?value!=0) && !(?value<=?maxq && ?value>=?minq && ?value=0)) .           
			}""" .        
      
            
sshn456:TapChanger  a  sh:NodeShape ;
        sh:property     sshn456:TapChanger.step-value;
        sh:targetClass  cim:RatioTapChanger , cim:PhaseTapChangerLinear , cim:PhaseTapChangerSymmetrical , cim:PhaseTapChangerAsymmetrical , cim:PhaseTapChangerTabular.

sshn456:TapChanger.step-value
        a               sh:PropertyShape ;
        sh:sparql       sshn456:TapChanger.step-valueSparql ;
        sh:description  "In cases where RegulatingControl.discrete is true and RegulatingControl.enabled is true, TapChanger.step shall be integer. " ;
        sh:name         "C:456:SSH:TapChanger.step:value" ;
        sh:path         cim:TapChanger.step ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        4 ;
        sh:severity     sh:Violation .
        
    
sshn456:TapChanger.step-valueSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The value is not integer for an active discrete regulating control." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        #OPTIONAL {$this cim:TapChanger.TapChangerControl ?contr}.
        #?contr cim:RegulatingControl.discrete ?discrete . 
        #?contr cim:RegulatingControl.enabled ?enabled .
        $this cim:TapChanger.TapChangerControl ?contr.
        ?contr cim:RegulatingControl.discrete true . 
        ?contr cim:RegulatingControl.enabled true .
        #FILTER (STRENDS(str(?value), ".") && !REGEX(STRAFTER(str(?value), "."), "^[0]$", "i")  && bound(?contr) && ?discrete=true && ?enabled=true) .  
        FILTER (STRENDS(str(?value), ".") && !REGEX(STRAFTER(str(?value), "."), "^[0]$", "i")) .         
			}""" .  

sshn456:ShuntCompensator  a  sh:NodeShape ;
        sh:property     sshn456:ShuntCompensator.sections-value ;
        sh:targetClass  cim:LinearShuntCompensator , cim:NonlinearShuntCompensator .


sshn456:ShuntCompensator.sections-value
        a               sh:PropertyShape ;
        sh:sparql       sshn456:ShuntCompensator.sections-valueSparql ;
        sh:description  "In cases where RegulatingControl.discrete is true and RegulatingControl.enabled is true, ShuntCompensator.sections shall be integer. " ;
        sh:name         "C:456:SSH:ShuntCompensator.sections:value" ;
        sh:path         cim:ShuntCompensator.sections ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        5 ;
        sh:severity     sh:Violation .
        
    
sshn456:ShuntCompensator.sections-valueSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The value is not integer for an active discrete regulating control." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        #OPTIONAL {$this cim:RegulatingCondEq.RegulatingControl ?contr}.
        #?contr cim:RegulatingControl.discrete ?discrete . 
        #?contr cim:RegulatingControl.enabled ?enabled .
        $this cim:RegulatingCondEq.RegulatingControl ?contr.
        ?contr cim:RegulatingControl.discrete true . 
        ?contr cim:RegulatingControl.enabled true .
        #FILTER (STRENDS(str(?value), ".") && !REGEX(STRAFTER(str(?value), "."), "^[0]$", "i") && bound(?contr) && ?discrete=true && ?enabled=true) .
        FILTER (STRENDS(str(?value), ".") && !REGEX(STRAFTER(str(?value), "."), "^[0]$", "i") ) .        
			}""" .            

sshn456:RegulatingControl  a  sh:NodeShape ;
        sh:property     sshn456:RegulatingControl.targetValue-value;
        sh:targetClass  cim:RegulatingControl , cim:TapChangerControl .
      
sshn456:RegulatingControl.targetValue-value
        a               sh:PropertyShape ;
        sh:sparql       sshn456:RegulatingControl.targetValue-valueSparql ;
        sh:description  "RegulatingControl.targetValue shall be positive value in cases where the RegulatingControl.mode is set to voltage in EQ profile. " ;
        sh:name         "C:456:SSH:RegulatingControl.targetValue:value" ;
        sh:path         cim:RegulatingControl.targetValue ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        6 ;
        sh:severity     sh:Violation .
        
    
sshn456:RegulatingControl.targetValue-valueSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The value is negative or zero for RegulatingControl in voltage mode." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this cim:RegulatingControl.mode cim:RegulatingControlModeKind.voltage .
        $this $PATH ?value .
        FILTER (?value<=0 ) . 
        #FILTER (?value<=0 && ?mode=cim:RegulatingControlModeKind.voltage) .        
			}""" .  

    
      
sshn456:ExternalNetworkInjection  a  sh:NodeShape ;
        sh:property     sshn456:ExternalNetworkInjection.p-limits , sshn456:ExternalNetworkInjection.q-limits;
        sh:targetClass  cim:ExternalNetworkInjection .


sshn456:ExternalNetworkInjection.p-limits
        a               sh:PropertyShape ;
        sh:sparql       sshn456:ExternalNetworkInjection.p-limitsSparql ;
        sh:description  "The negated value (necessary due to sign convention) of ExternalNetworkInjection.p shall be less than or equal to ExternalNetworkInjection.maxP and shall be greater than or equal to ExternalNetworkInjection.minP." ;
        sh:name         "C:456:SSH:ExternalNetworkInjection.p:limits" ;
        sh:path         cim:ExternalNetworkInjection.p ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        7 ;
        sh:severity     sh:Violation .
        
    
sshn456:ExternalNetworkInjection.p-limitsSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Active power is outside defined active power limits." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        $this cim:ExternalNetworkInjection.maxP ?maxp . 
        $this cim:ExternalNetworkInjection.minP ?minp .
        FILTER (!(-?value<=?maxp && -?value>=?minp && ?value!=0) && !(?value<=?maxp && ?value>=?minp && ?value=0)) .        
			}""" .  

sshn456:ExternalNetworkInjection.q-limits
        a               sh:PropertyShape ;
        sh:sparql       sshn456:ExternalNetworkInjection.q-limitsSparql ;
        sh:description  "The negated value (necessary due to sign convention) of ExternalNetworkInjection.q shall be less than or equal to ExternalNetworkInjection.maxQ and shall be greater than or equal to ExternalNetworkInjection.minQ." ;
        sh:name         "C:456:SSH:ExternalNetworkInjection.q:limits" ;
        sh:path         cim:ExternalNetworkInjection.q ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        8 ;
        sh:severity     sh:Violation .
        
    
sshn456:ExternalNetworkInjection.q-limitsSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Reactive power is outside defined reactive power limits." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        $this cim:ExternalNetworkInjection.maxQ ?maxq . 
        $this cim:ExternalNetworkInjection.minQ ?minq .
        FILTER (!(-?value<=?maxq && -?value>=?minq && ?value!=0) && !(?value<=?maxq && ?value>=?minq && ?value=0)) .        
			}""" .            
      
sshn456:EquivalentInjection  a  sh:NodeShape ;
        sh:property     sshn456:EquivalentInjection.p-limits , sshn456:EquivalentInjection.q-limits;
        sh:targetClass  cim:EquivalentInjection .


sshn456:EquivalentInjection.p-limits
        a               sh:PropertyShape ;
        sh:sparql       sshn456:EquivalentInjection.p-limitsSparql ;
        sh:description  "The negated value (necessary due to sign convention) of EquivalentInjection.p shall be less than or equal to EquivalentInjection.maxP and shall be greater than or equal to EquivalentInjection.minP." ;
        sh:name         "C:456:SSH:EquivalentInjection.p:limits" ;
        sh:path         cim:EquivalentInjection.p ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        9 ;
        sh:severity     sh:Violation .
        
    
sshn456:EquivalentInjection.p-limitsSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Active power is outside defined active power limits." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        #OPTIONAL {$this cim:EquivalentInjection.maxP ?maxp} . 
        #OPTIONAL {$this cim:EquivalentInjection.minP ?minp} .
        $this cim:EquivalentInjection.maxP ?maxp . 
        $this cim:EquivalentInjection.minP ?minp .
        #FILTER (bound(?maxp) && bound(?minp) && !(-?value<=?maxp && -?value>=?minp && ?value!=0) && !(?value<=?maxp && ?value>=?minp && ?value=0)) .  
        FILTER (!(-?value<=?maxp && -?value>=?minp && ?value!=0) && !(?value<=?maxp && ?value>=?minp && ?value=0)) .        
			}""" .  

sshn456:EquivalentInjection.q-limits
        a               sh:PropertyShape ;
        sh:sparql       sshn456:EquivalentInjection.q-limitsSparql ;
        sh:description  "The negated value (necessary due to sign convention) of EquivalentInjection.q shall be less than or equal to EquivalentInjection.maxQ and shall be greater than or equal to EquivalentInjection.minQ." ;
        sh:name         "C:456:SSH:EquivalentInjection.q:limits" ;
        sh:path         cim:EquivalentInjection.q ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        10 ;
        sh:severity     sh:Violation .
        
    
sshn456:EquivalentInjection.q-limitsSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Reactive power is outside defined reactive power limits." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        #OPTIONAL {$this cim:EquivalentInjection.maxQ ?maxq} . 
        #OPTIONAL {$this cim:EquivalentInjection.minQ ?minq} .
        $this cim:EquivalentInjection.maxQ ?maxq . 
        $this cim:EquivalentInjection.minQ ?minq .
        #FILTER (bound(?maxq) && bound(?minq) && !(-?value<=?maxq && -?value>=?minq && ?value!=0) && !(?value<=?maxq && ?value>=?minq && ?value=0)) .  
        FILTER (!(-?value<=?maxq && -?value>=?minq && ?value!=0) && !(?value<=?maxq && ?value>=?minq && ?value=0)) .        
			}""" .            
            
sshn456:SynchronousMachine  a  sh:NodeShape ;
        sh:property     sshn456:SynchronousMachine.operatingMode-matchType , sshn456:RotatingMachine-pAndQcapabilityCurveP , sshn456:RotatingMachine-pAndQcapabilityCurveQ ;
        sh:targetClass  cim:SynchronousMachine .


sshn456:SynchronousMachine.operatingMode-matchType
        a               sh:PropertyShape ;
        sh:sparql       sshn456:SynchronousMachine.operatingMode-matchTypeSparql ;
        sh:description  "The SynchronousMachine.operatingMode shall be consistent with the SynchronousMachine.type. SynchronousMachine.operatingMode = motor shall be provided for SynchronousMachine.type in (motor, generatorOrMotor, motorOrCondenser, generatorOrCondenserOrMotor), SynchronousMachine.operatingMode = condenser shall be provided for SynchronousMachine.type in (condenser, generatorOrCondenser, motorOrCondenser, generatorOrCondenserOrMotor), and SynchronousMachine.operatingMode = generator shall be provided for SynchronousMachine.type in (generator, generatorOrMotor, generatorOrCondenser, generatorOrCondenserOrMotor)." ;
        sh:name         "C:456:SSH:SynchronousMachine.operatingMode:matchType" ;
        sh:path         cim:SynchronousMachine.operatingMode ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        11 ;
        sh:severity     sh:Violation .
        
    
sshn456:SynchronousMachine.operatingMode-matchTypeSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The value of SynchronousMachine.operatingMode is not consistent with the value of SynchronousMachine.type." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value
			WHERE {
        $this $PATH ?value .
        $this cim:SynchronousMachine.type ?type .
         
        FILTER ((?value=cim:SynchronousMachineOperatingMode.motor && ?type NOT IN (cim:SynchronousMachineKind.motor , cim:SynchronousMachineKind.generatorOrMotor , cim:SynchronousMachineKind.motorOrCondenser , cim:SynchronousMachineKind.generatorOrCondenserOrMotor)) ||
        (?value=cim:SynchronousMachineOperatingMode.condenser && ?type NOT IN (cim:SynchronousMachineKind.condenser , cim:SynchronousMachineKind.generatorOrCondenser , cim:SynchronousMachineKind.motorOrCondenser , cim:SynchronousMachineKind.generatorOrCondenserOrMotor)) ||
        (?value=cim:SynchronousMachineOperatingMode.generator && ?type NOT IN (cim:SynchronousMachineKind.generator , cim:SynchronousMachineKind.generatorOrMotor , cim:SynchronousMachineKind.generatorOrCondenser , cim:SynchronousMachineKind.generatorOrCondenserOrMotor))) .        
			}""" .         
     
     
sshn456:RotatingMachine-pAndQcapabilityCurveP
        a               sh:PropertyShape ;
        sh:sparql       sshn456:RotatingMachine-pAndQcapabilityCurvePSparql ;
        sh:path         rdf:type ;
        sh:description  "In cases where a ReactiveCapabilityCurve is associated, the RotatingMachine.p shall be less than or equal to the maximum active power value defined by the curve and it shall be greater than or equal to the minimum active power value defined by the curve. The RotatingMachine.q shall be less than or equal to the maximum reactive power value defined by the curve and it shall be greater than or equal to the minimum reactive power value defined by the curve." ;
        sh:name         "C:456:SSH:RotatingMachine:pAndQcapabilityCurve" ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        12 ;
        sh:severity     sh:Violation .
        
sshn456:RotatingMachine-pAndQcapabilityCurvePSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The active power is not within the limits defined by the ReactiveCapabilityCurve." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value 
			WHERE {
        $this cim:RotatingMachine.p ?value .
        OPTIONAL {$this cim:SynchronousMachine.InitialReactiveCapabilityCurve ?rcc } .
               
        {
        SELECT $this (MAX(?xvalue) AS ?maxxvalue)  (MIN(?xvalue) AS ?minxvalue)
          WHERE {
            OPTIONAL {?rcc1 ^cim:SynchronousMachine.InitialReactiveCapabilityCurve $this } .
            ?rcc1 ^cim:CurveData.Curve ?curvedata .
            ?curvedata rdf:type ?cdtype .
            ?curvedata cim:CurveData.xvalue ?xvalue .
            FILTER (bound(?rcc1) && ?cdtype=cim:CurveData ) .
          }
          GROUP BY $this ?cdtype
        }

        FILTER ( bound(?rcc) && !(-?value>=?minxvalue && -?value<=?maxxvalue)).
			}""" .       
        
        
sshn456:RotatingMachine-pAndQcapabilityCurveQ
        a               sh:PropertyShape ;
        sh:sparql       sshn456:RotatingMachine-pAndQcapabilityCurveQSparql ;
        sh:path         rdf:type ;
        sh:description  "In cases where a ReactiveCapabilityCurve is associated, the RotatingMachine.p shall be less than or equal to the maximum active power value defined by the curve and it shall be greater than or equal to the minimum active power value defined by the curve. The RotatingMachine.q shall be less than or equal to the maximum reactive power value defined by the curve and it shall be greater than or equal to the minimum reactive power value defined by the curve." ;
        sh:name         "C:456:SSH:RotatingMachine:pAndQcapabilityCurve" ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        13 ;
        sh:severity     sh:Violation .
        
sshn456:RotatingMachine-pAndQcapabilityCurveQSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The reactive power is not within the limits defined by the ReactiveCapabilityCurve." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value 
			WHERE {
        $this cim:RotatingMachine.q ?value .
        OPTIONAL {$this cim:SynchronousMachine.InitialReactiveCapabilityCurve ?rcc } .
               
        {
        SELECT $this (MAX(?y2value) AS ?my2value)  (MIN(?y1value) AS ?my1value)
          WHERE {
            OPTIONAL {?rcc1 ^cim:SynchronousMachine.InitialReactiveCapabilityCurve $this } .
            ?rcc1 ^cim:CurveData.Curve ?curvedata .
            ?curvedata rdf:type ?cdtype .
            ?curvedata cim:CurveData.y1value ?y1value .
            ?curvedata cim:CurveData.y2value ?y2value .
            FILTER (bound(?rcc1) && ?cdtype=cim:CurveData ) .
          }
          GROUP BY $this ?cdtype
        }

        FILTER ( bound(?rcc) && !(-?value>=?my1value && -?value<=?my2value)).
			}""" .         
        
        
        
sshn456:GeneratingUnit  a  sh:NodeShape ;
        sh:property     sshn456:GeneratingUnit-singleActivePowerSlack ;
        sh:targetNode   cim:AllGeneratingUnit.

sshn456:GeneratingUnit-singleActivePowerSlack
        a               sh:PropertyShape ;
        sh:sparql       sshn456:GeneratingUnit-singleActivePowerSlackSparql ;
        sh:path         rdf:type ;
        sh:description  "Active power slack by a single generator per ControlArea: one generator has GeneratingUnit.normalPF set to a highest value (non-zero) and all other generating units have a zero GeneratingUnit.normalPF." ;
        sh:name         "C:456:SSH:NA:singleActivePowerSlack" ;
        sh:group        sshn456:NotSolved456 ;
        sh:order        14 ;
        sh:severity     sh:Violation .
        
    
sshn456:GeneratingUnit-singleActivePowerSlackSparql
		a         sh:SPARQLConstraint ;  
		sh:message "Either there is no highest value among GeneratingUnit.normalPF or there are multiple maximum values which are the same." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value ?countm ?countd (COUNT(?npf1) as ?counte) ?countall
        WHERE {
          ?gu cim:GeneratingUnit.normalPF ?npf1 .
          BIND ("" AS ?value).
          FILTER (?npf1=?countm)
          {
            SELECT $this (COUNT(DISTINCT ?npf) as ?countd) (MAX(?npf) as ?countm) (COUNT(?npf) as ?countall)
            WHERE {
              ?gu cim:GeneratingUnit.normalPF ?npf .
            }
            GROUP BY $this datatype(?npf)
          }
        }
        GROUP BY $this ?value ?countm ?countd datatype(?npf1) ?countall
        HAVING((?countd<2 && ?countall!=1) || ?countm=0 || ?counte!=1)
      """ .          
        
sshn456:Equipment  a  sh:NodeShape ;
        sh:property     sshn456:Equipment.inService-eqshhCardinality;
        sh:targetClass  cim:Equipment , cim:ConformLoad , cim:PotentialTransformer , cim:Ground , cim:HydroPump , cim:WaveTrap , cim:EnergyConsumer , cim:DCChopper , cim:PowerElectronicsWindUnit , cim:PhotoVoltaicUnit , cim:ExternalNetworkInjection , cim:AsynchronousMachine , cim:Jumper , cim:CurrentTransformer , cim:BatteryUnit , cim:WindGeneratingUnit , cim:EquivalentShunt , cim:DCShunt , cim:SynchronousMachine , cim:EquivalentBranch , cim:DCSeriesDevice , cim:NonlinearShuntCompensator , cim:ThermalGeneratingUnit , cim:PostLineSensor , cim:DCDisconnector , cim:Switch , cim:DCBusbar , cim:CsConverter , cim:Cut , cim:Breaker , cim:DCSwitch , cim:SeriesCompensator , cim:SurgeArrester , cim:Fuse , cim:SolarGeneratingUnit , cim:StaticVarCompensator , cim:DCGround , cim:NonConformLoad , cim:ACLineSegment , cim:HydroGeneratingUnit , cim:FaultIndicator , cim:DCBreaker , cim:VsConverter , cim:LoadBreakSwitch , cim:DCLineSegment , cim:BusbarSection , cim:Disconnector , cim:GeneratingUnit , cim:PowerTransformer , cim:LinearShuntCompensator , cim:DisconnectingCircuitBreaker , cim:GroundDisconnector , cim:PetersenCoil , cim:Junction , cim:PowerElectronicsConnection , cim:EnergySource , cim:NuclearGeneratingUnit , cim:GroundingImpedance , cim:StationSupply , cim:Clamp , cim:EquivalentInjection .   

sshn456:Equipment.inService-eqshhCardinality
        rdf:type        sh:PropertyShape ;
        sh:description  "This constraint validates the cardinality of the property (attribute) for classes that are in EQ but not in SSH profile." ;
        sh:group        sshn456:NotSolved456 ;
        sh:maxCount     1 ;
        sh:message      "Missing required property (attribute). The equipment is instantiated in EQ instance but Equipment.inService is not instantiated in SSH." ;
        sh:minCount     1 ;
        sh:name         "Equipment.inService-eqshhCardinality" ;
        sh:order        15 ;
        sh:path         cim:Equipment.inService ;
        sh:severity     sh:Violation .		