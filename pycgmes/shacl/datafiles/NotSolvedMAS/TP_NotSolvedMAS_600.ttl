@base          <http://iec.ch/TC57/ns/CIM/Topology-EU/constraints/IEC61970-600/notSolved/3.0> .
@prefix eu:    <http://iec.ch/TC57/CIM100-European#> .
@prefix cims:  <http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix cim:   <http://iec.ch/TC57/CIM100#> .
@prefix tpn600:  <http://iec.ch/TC57/ns/CIM/Topology-EU/constraints/IEC61970-600/notSolved/3.0#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dash:  <http://datashapes.org/dash#> .
@prefix dct:    <http://purl.org/dc/terms/> .
@prefix dcat:    <http://www.w3.org/ns/dcat#> .

tpn600:Ontology  rdf:type         owl:Ontology ;
        dct:conformsTo        "urn:iso:std:iec:61970-501:draft:ed-2" , "urn:iso:std:iec:61970-600-2:ed-1" , "urn:iso:std:iec:61970-301:ed-7:amd1" , "file://iec61970cim17v40_iec61968cim13v13a_iec62325cim03v17a.eap" ;
        dct:creator           "ENTSO-E CIM EG"@en ;
        dct:description       "The constraints for TP from IEC 61970-600-2."@en ;
        dct:identifier        "urn:uuid:f7005b0c-a153-4e98-ae6b-789bcf0f2367" ;
        dct:issued            "2021-10-19T12:09:21Z"^^xsd:dateTime ;
        dct:language          "en-GB" ;
        dct:modified          "2020-10-19"^^xsd:date ;
        dct:publisher         "ENTSO-E"@en ;
        dct:rights            "Copyright"@en ;
        dct:rightsHolder      "ENTSO-E"@en ;
        dct:title             "TP not solved MAS Constraints"@en ;
        owl:versionIRI        <http://iec.ch/TC57/ns/CIM/Topology-EU/constraints/IEC61970-600/notSolved/3.0> ;
        owl:versionInfo       "3.0.0"@en ;
        dcat:landingPage      "https://www.entsoe.eu/digital/cim/cim-for-grid-models-exchange/" ;
        dcat:theme            "constraints"@en .

cim:    
    a           owl:Ontology ;
    owl:imports sh: ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100#"^^xsd:anyURI ;
        sh:prefix "cim" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
        sh:prefix "rdf" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100-European#"^^xsd:anyURI ;
        sh:prefix "eu" ;
    ] .

tpn600:TPunsolved600
        a           sh:PropertyGroup ;
        rdfs:label  "NotSolvedMASTP-IEC61970-600-1" ;
        sh:order    0 .

tpn600:Terminal
        a               sh:NodeShape ;
        sh:property     tpn600:Terminal-EXCH8TopologicalNode ;
        sh:targetClass  cim:Terminal .


tpn600:Terminal-EXCH8TopologicalNode
        a               sh:PropertyShape ;
        sh:sparql       tpn600:Terminal-EXCH8TopologicalNodeSparql ;
        sh:path         rdf:type ;
        sh:description  "The association end Terminal.TopologicalNode is required in cases where a RegulatingControl is associated with a Terminal." ;
        sh:name         "C:600:EQ:Terminal:EXCH8TopologicalNode" ;
        sh:group        tpn600:TPunsolved600 ;
        sh:order        0 ;
        sh:severity     sh:Violation .
        
    
tpn600:Terminal-EXCH8TopologicalNodeSparql
		a         sh:SPARQLConstraint ;  
		sh:message "The Terminal is referenced by a RegulatingControl but is not associated with a TopologicalNode." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this 
			WHERE {
             #OPTIONAL {$this ^cim:RegulatingControl.Terminal ?rc}.
             #OPTIONAL {$this cim:Terminal.TopologicalNode ?value}.
             #BIND(EXISTS{$this ^cim:RegulatingControl.Terminal/cim:RegulatingControl.enabled true} AS ?enable).
             BIND(EXISTS{$this ^cim:RegulatingControl.Terminal ?rc} AS ?rctrue).
             BIND(EXISTS{$this cim:Terminal.TopologicalNode ?v} AS ?val).
             #$this cim:Terminal.TopologicalNode ?value .
				#FILTER (!bound(?value) && bound(?rc)) .
        #FILTER (?val=false && ?enable=true) .
        FILTER (?val=false && ?rctrue=true) .
			}""" .










