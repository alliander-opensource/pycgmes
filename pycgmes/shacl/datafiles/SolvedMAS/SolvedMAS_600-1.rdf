<?xml version="1.0"?>
<rdf:RDF xmlns:dct="http://purl.org/dc/terms/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:sm600="http://iec.ch/TC57/ns/CIM/SolvedMAS/constraints/IEC61970-600/3.0#" xmlns:eu="http://iec.ch/TC57/CIM100-European#" xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:cims="http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#" xmlns:sh="http://www.w3.org/ns/shacl#" xmlns:dcat="http://www.w3.org/ns/dcat#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:cim="http://iec.ch/TC57/CIM100#" xmlns:dash="http://datashapes.org/dash#" xmlns:xsd="http://www.w3.org/2001/XMLSchema#" xml:base="http://iec.ch/TC57/ns/CIM/SolvedMAS/constraints/IEC61970-600/3.0">
  <rdf:Description rdf:about="http://iec.ch/TC57/CIM100#">
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Ontology"/>
    <owl:imports rdf:resource="http://www.w3.org/ns/shacl#"/>
    <sh:declare rdf:nodeID="A0"/>
    <sh:declare rdf:nodeID="A1"/>
    <sh:declare rdf:nodeID="A2"/>
    <sh:declare rdf:nodeID="A3"/>
  </rdf:Description>
  <rdf:Description rdf:about="#SvTapStep-SV__4">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyShape"/>
    <sh:sparql rdf:resource="#SvTapStep-SV__4Sparql"/>
    <sh:path rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
    <sh:description>All state variables shall be instantiated in the SV instance file (distribution) for all energized elements part of a TopologicalIsland independently of the regulating status of the elements (e.g. for a shunt compensator that is not regulating the SvShuntCompensatorSections.sections shall be the same as ShuntCompensator.sections). All instances shall be representing computed values obtained from a power flow calculation. For SvPowerFlow instances refer to profile constraint on the SvPowerFlow class.</sh:description>
    <sh:name>C:600:SV:SvTapStep:SV__4</sh:name>
    <sh:group rdf:resource="#solvedMAS600Group"/>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6</sh:order>
    <sh:severity rdf:resource="http://www.w3.org/ns/shacl#Violation"/>
  </rdf:Description>
  <rdf:Description rdf:about="#SvStatus-SV__4">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyShape"/>
    <sh:sparql rdf:resource="#SvStatus-SV__4Sparql"/>
    <sh:path rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
    <sh:description>All state variables shall be instantiated in the SV instance file (distribution) for all energized elements part of a TopologicalIsland independently of the regulating status of the elements (e.g. for a shunt compensator that is not regulating the SvShuntCompensatorSections.sections shall be the same as ShuntCompensator.sections). All instances shall be representing computed values obtained from a power flow calculation. For SvPowerFlow instances refer to profile constraint on the SvPowerFlow class.</sh:description>
    <sh:name>C:600:SV:SvStatus:SV__4</sh:name>
    <sh:group rdf:resource="#solvedMAS600Group"/>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">4</sh:order>
    <sh:severity rdf:resource="http://www.w3.org/ns/shacl#Violation"/>
  </rdf:Description>
  <rdf:Description rdf:about="#Ontology">
    <dct:conformsTo>file://iec61970cim17v40_iec61968cim13v13a_iec62325cim03v17a.eap</dct:conformsTo>
    <owl:versionInfo xml:lang="en">3.0.0</owl:versionInfo>
    <dct:issued rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2021-10-19T12:09:21Z</dct:issued>
    <dct:title xml:lang="en">Solved MAS Constraints</dct:title>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#Ontology"/>
    <dct:modified rdf:datatype="http://www.w3.org/2001/XMLSchema#date">2020-10-19</dct:modified>
    <dct:rightsHolder xml:lang="en">ENTSO-E</dct:rightsHolder>
    <dcat:theme xml:lang="en">constraints</dcat:theme>
    <dct:creator xml:lang="en">ENTSO-E CIM EG</dct:creator>
    <dct:language>en-GB</dct:language>
    <dct:description xml:lang="en">The constraints for solved MAS from IEC 61970-600-1.</dct:description>
    <dct:conformsTo>urn:iso:std:iec:61970-301:ed-7:amd1</dct:conformsTo>
    <dct:publisher xml:lang="en">ENTSO-E</dct:publisher>
    <dcat:landingPage>https://www.entsoe.eu/digital/cim/cim-for-grid-models-exchange/</dcat:landingPage>
    <dct:rights xml:lang="en">Copyright</dct:rights>
    <dct:conformsTo>urn:iso:std:iec:61970-600-2:ed-1</dct:conformsTo>
    <owl:versionIRI rdf:resource=""/>
    <dct:conformsTo>urn:iso:std:iec:61970-501:draft:ed-2</dct:conformsTo>
    <dct:identifier>urn:uuid:4fe80376-77d7-4309-bd6c-112878060174</dct:identifier>
  </rdf:Description>
  <rdf:Description rdf:about="#SvSwitch-SV__4Sparql">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLConstraint"/>
    <sh:message>SvSwitch is not instantiated for a retained Switch (or any of the subtypes) connected to a TopologicalNode which is referenced by a TopologicalIsland.</sh:message>
    <sh:prefixes rdf:resource="http://iec.ch/TC57/CIM100#"/>
    <sh:select>
			SELECT  DISTINCT $this ?value 
			WHERE {
        $this ^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService true .
        $this cim:Switch.retained true .
        $this rdf:type ?value .
        $this ^cim:Terminal.ConductingEquipment/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes ?topologicalisland.
        #OPTIONAL {$this ^cim:Terminal.ConductingEquipment/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes ?topologicalisland }.
        OPTIONAL {$this  ^cim:SvSwitch.Switch  ?svswitch} .
        #FILTER (bound(?topologicalisland) &amp;&amp; !bound(?svswitch)  ).
        FILTER (!bound(?svswitch)  ).
			}</sh:select>
  </rdf:Description>
  <rdf:Description rdf:about="#SvVoltage-SV__4">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyShape"/>
    <sh:sparql rdf:resource="#SvVoltage-SV__4Sparql"/>
    <sh:path rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
    <sh:description>All state variables shall be instantiated in the SV instance file (distribution) for all energized elements part of a TopologicalIsland independently of the regulating status of the elements (e.g. for a shunt compensator that is not regulating the SvShuntCompensatorSections.sections shall be the same as ShuntCompensator.sections). All instances shall be representing computed values obtained from a power flow calculation. For SvPowerFlow instances refer to profile constraint on the SvPowerFlow class.</sh:description>
    <sh:name>C:600:SV:SvVoltage:SV__4</sh:name>
    <sh:group rdf:resource="#solvedMAS600Group"/>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</sh:order>
    <sh:severity rdf:resource="http://www.w3.org/ns/shacl#Violation"/>
  </rdf:Description>
  <rdf:Description rdf:about="#SvShuntCompensatorSections-SV__4Sparql">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLConstraint"/>
    <sh:message>SvShuntCompensatorSections is not instantiated for a ShuntCompensator (or any of the subtypes) connected to a TopologicalNode which is referenced by a TopologicalIsland.</sh:message>
    <sh:prefixes rdf:resource="http://iec.ch/TC57/CIM100#"/>
    <sh:select>
			SELECT  DISTINCT $this ?value 
			WHERE {
        $this ^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService true .
        $this ^cim:Terminal.ConductingEquipment/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes ?topologicalisland.
        $this rdf:type ?value .
        #OPTIONAL {$this ^cim:Terminal.ConductingEquipment/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes ?topologicalisland }.
        OPTIONAL {$this  ^cim:SvShuntCompensatorSections.ShuntCompensator  ?svshuntcompsec} .
        #FILTER (bound(?topologicalisland) &amp;&amp; !bound(?svshuntcompsec)  ).
        FILTER (!bound(?svshuntcompsec)  ).
			}</sh:select>
  </rdf:Description>
  <rdf:Description rdf:about="#SvSwitch-SV__4">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyShape"/>
    <sh:sparql rdf:resource="#SvSwitch-SV__4Sparql"/>
    <sh:path rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
    <sh:description>All state variables shall be instantiated in the SV instance file (distribution) for all energized elements part of a TopologicalIsland independently of the regulating status of the elements (e.g. for a shunt compensator that is not regulating the SvShuntCompensatorSections.sections shall be the same as ShuntCompensator.sections). All instances shall be representing computed values obtained from a power flow calculation. For SvPowerFlow instances refer to profile constraint on the SvPowerFlow class.</sh:description>
    <sh:name>C:600:SV:SvSwitch:SV__4</sh:name>
    <sh:group rdf:resource="#solvedMAS600Group"/>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">3</sh:order>
    <sh:severity rdf:resource="http://www.w3.org/ns/shacl#Violation"/>
  </rdf:Description>
  <rdf:Description rdf:about="#SvVoltage-SV__4Sparql">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLConstraint"/>
    <sh:message>SvVoltage is not instantiated for a TopologicalNode which is referenced by a TopologicalIsland.</sh:message>
    <sh:prefixes rdf:resource="http://iec.ch/TC57/CIM100#"/>
    <sh:select>
			SELECT  $this
			WHERE {
        $this  ^cim:TopologicalIsland.TopologicalNodes ?topologicalisland.
        #OPTIONAL {$this  ^cim:TopologicalIsland.TopologicalNodes ?topologicalisland}.
        OPTIONAL {$this  ^cim:SvVoltage.TopologicalNode ?svvoltage} .

        FILTER (!bound(?svvoltage)).
        #FILTER (bound(?topologicalisland) &amp;&amp; !bound(?svvoltage)).
			}</sh:select>
  </rdf:Description>
  <rdf:Description rdf:about="#SvShuntCompensatorSections.sections-SV__4Sparql">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLConstraint"/>
    <sh:message>SvShuntCompensatorSections.sections is not the same as ShuntCompensator.sections for non-regulating ShuntCompensator. SvShuntCompensatorSections.sections is: {?svshuntsec}; ShuntCompensator.sections is: {?value}.</sh:message>
    <sh:prefixes rdf:resource="http://iec.ch/TC57/CIM100#"/>
    <sh:select>
			SELECT  DISTINCT $this ?value ?svshuntsec
			WHERE {
        $this ^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService true .
        $this cim:RegulatingCondEq.controlEnabled ?controlen .
        $this  ^cim:SvShuntCompensatorSections.ShuntCompensator/cim:SvShuntCompensatorSections.sections  ?svshuntsec .
        $this $PATH ?value .
        OPTIONAL {$this  cim:RegulatingCondEq.RegulatingControl/cim:RegulatingControl.enabled ?rcenabled} .
        #OPTIONAL {$this  ^cim:SvShuntCompensatorSections.ShuntCompensator/cim:SvShuntCompensatorSections.sections  ?svshuntsec} .
        #FILTER (bound(?svshuntsec) &amp;&amp; ((?controlen=false &amp;&amp; ?svshuntsec!=?value) || (bound(?rcenabled) &amp;&amp; ?rcenabled=false &amp;&amp; ?svshuntsec!=?value) )  ).
        FILTER ((?controlen=false &amp;&amp; ?svshuntsec!=?value) || (bound(?rcenabled) &amp;&amp; ?rcenabled=false &amp;&amp; ?svshuntsec!=?value)   ).
			}</sh:select>
  </rdf:Description>
  <rdf:Description rdf:about="#SvShuntCompensatorSections-SV__4">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyShape"/>
    <sh:sparql rdf:resource="#SvShuntCompensatorSections-SV__4Sparql"/>
    <sh:path rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
    <sh:description>All state variables shall be instantiated in the SV instance file (distribution) for all energized elements part of a TopologicalIsland independently of the regulating status of the elements (e.g. for a shunt compensator that is not regulating the SvShuntCompensatorSections.sections shall be the same as ShuntCompensator.sections). All instances shall be representing computed values obtained from a power flow calculation. For SvPowerFlow instances refer to profile constraint on the SvPowerFlow class.</sh:description>
    <sh:name>C:600:SV:SvShuntCompensatorSections:SV__4</sh:name>
    <sh:group rdf:resource="#solvedMAS600Group"/>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">5</sh:order>
    <sh:severity rdf:resource="http://www.w3.org/ns/shacl#Violation"/>
  </rdf:Description>
  <rdf:Description rdf:about="#SvTapStep.position-SV__4Sparql">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLConstraint"/>
    <sh:message>SvTapStep.position is not the same as TapChanger.step for non-regulating TapChanger. SvTapStep.position is: {?svtapsteppos}; TapChanger.step is: {?value}.</sh:message>
    <sh:prefixes rdf:resource="http://iec.ch/TC57/CIM100#"/>
    <sh:select>
			SELECT  DISTINCT $this ?value ?svtapsteppos
			WHERE {
        $this (cim:RatioTapChanger.TransformerEnd/cim:TransformerEnd.PowerTransformer/^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService)|(cim:PhaseTapChanger.TransformerEnd/cim:TransformerEnd.PowerTransformer/^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService) true .
        $this cim:TapChanger.controlEnabled ?controlen .
        $this  ^cim:SvTapStep.TapChanger/cim:SvTapStep.position  ?svtapsteppos.
        $this $PATH ?value .
        OPTIONAL {$this  cim:TapChanger.TapChangerControl/cim:RegulatingControl.enabled ?rcenabled} .
        #OPTIONAL {$this  ^cim:SvTapStep.TapChanger/cim:SvTapStep.position  ?svtapsteppos} .
        #FILTER (bound(?svtapsteppos) &amp;&amp; ((?controlen=false &amp;&amp; ?svtapsteppos!=?value) || (bound(?rcenabled) &amp;&amp; ?rcenabled=false &amp;&amp; ?svtapsteppos!=?value) )  ).
        FILTER ((?controlen=false &amp;&amp; ?svtapsteppos!=?value) || (bound(?rcenabled) &amp;&amp; ?rcenabled=false &amp;&amp; ?svtapsteppos!=?value)  ).
			}</sh:select>
  </rdf:Description>
  <rdf:Description rdf:about="#SvShuntCompensatorSections.sections-SV__4">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyShape"/>
    <sh:sparql rdf:resource="#SvShuntCompensatorSections.sections-SV__4Sparql"/>
    <sh:description>All state variables shall be instantiated in the SV instance file (distribution) for all energized elements part of a TopologicalIsland independently of the regulating status of the elements (e.g. for a shunt compensator that is not regulating the SvShuntCompensatorSections.sections shall be the same as ShuntCompensator.sections). All instances shall be representing computed values obtained from a power flow calculation. For SvPowerFlow instances refer to profile constraint on the SvPowerFlow class.</sh:description>
    <sh:name>C:600:SV:SvShuntCompensatorSections.sections:SV__4</sh:name>
    <sh:group rdf:resource="#solvedMAS600Group"/>
    <sh:path rdf:resource="http://iec.ch/TC57/CIM100#ShuntCompensator.sections"/>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">8</sh:order>
    <sh:severity rdf:resource="http://www.w3.org/ns/shacl#Violation"/>
  </rdf:Description>
  <rdf:Description rdf:nodeID="A0">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PrefixDeclaration"/>
    <sh:namespace rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">http://iec.ch/TC57/CIM100#</sh:namespace>
    <sh:prefix>cim</sh:prefix>
  </rdf:Description>
  <rdf:Description rdf:about="#SvSwitch">
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#GroundDisconnector"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#DisconnectingCircuitBreaker"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#Breaker"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#LoadBreakSwitch"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#Cut"/>
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#NodeShape"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#Switch"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#Jumper"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#Fuse"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#Disconnector"/>
    <sh:property rdf:resource="#SvSwitch-SV__4"/>
  </rdf:Description>
  <rdf:Description rdf:about="#SvVoltage">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#NodeShape"/>
    <sh:property rdf:resource="#SvVoltage-SV__4"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#TopologicalNode"/>
  </rdf:Description>
  <rdf:Description rdf:about="#SvTapStep">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#NodeShape"/>
    <sh:property rdf:resource="#SvTapStep-SV__4"/>
    <sh:property rdf:resource="#SvTapStep.position-SV__4"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#RatioTapChanger"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#PhaseTapChangerTabular"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#PhaseTapChangerSymmetrical"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#PhaseTapChangerAsymmetrical"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#PhaseTapChangerLinear"/>
  </rdf:Description>
  <rdf:Description rdf:about="#SvStatus">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#NodeShape"/>
    <sh:property rdf:resource="#SvStatus-SV__4"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#TopologicalIsland"/>
  </rdf:Description>
  <rdf:Description rdf:about="#All-DanglingReferences">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyShape"/>
    <sh:sparql rdf:resource="#All-DanglingReferencesSparql"/>
    <sh:path rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
    <sh:description>The CGMES requires that at the receiving end of the exchange all references in the instance files pointing to instance files from other profiles which are part of the exchange should be satisfied. Therefore, the complete set of instance files necessary for the grid model shall have fulfilled references (no dangling references are allowed).</sh:description>
    <sh:name>C:600:ALL:NA:FBOD4</sh:name>
    <sh:group rdf:resource="#solvedMAS600Group"/>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">1</sh:order>
    <sh:severity rdf:resource="http://www.w3.org/ns/shacl#Violation"/>
  </rdf:Description>
  <rdf:Description rdf:about="#DanglingReferences">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#NodeShape"/>
    <sh:property rdf:resource="#All-DanglingReferences"/>
    <sh:targetNode rdf:resource="http://iec.ch/TC57/CIM100#DanglingReferences"/>
  </rdf:Description>
  <rdf:Description rdf:nodeID="A1">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PrefixDeclaration"/>
    <sh:namespace rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">http://www.w3.org/1999/02/22-rdf-syntax-ns#</sh:namespace>
    <sh:prefix>rdf</sh:prefix>
  </rdf:Description>
  <rdf:Description rdf:about="#SvShuntCompensatorSections">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#NodeShape"/>
    <sh:property rdf:resource="#SvShuntCompensatorSections-SV__4"/>
    <sh:property rdf:resource="#SvShuntCompensatorSections.sections-SV__4"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#LinearShuntCompensator"/>
    <sh:targetClass rdf:resource="http://iec.ch/TC57/CIM100#NonlinearShuntCompensator"/>
  </rdf:Description>
  <rdf:Description rdf:about="#All-DanglingReferencesSparql">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLConstraint"/>
    <sh:message>Dangling reference is present in the model. The ID of the class is: {?s}.</sh:message>
    <sh:prefixes rdf:resource="http://iec.ch/TC57/CIM100#"/>
    <sh:select>
			SELECT  DISTINCT $this ?value ?s 
			WHERE {
        #?s !(rdf:type | md:Model.DependentOn | md:Model.Supersedes) ?value .
        ?s !rdf:type ?value .
        BIND (str(?value) AS ?strvalue).
        #OPTIONAL{?s (!rdf:type)/rdf:type ?v} .
        #OPTIONAL{?value  rdf:type ?v}.
        
        #FILTER(!isLiteral(?value) &amp;&amp; CONTAINS(str(?value),"_") &amp;&amp;
        #      !CONTAINS(str(?value),"FullModel") &amp;&amp; !CONTAINS(str(?value),"DifferenceModel")).
        #FILTER(!isLiteral(?value) &amp;&amp; !STRSTARTS(str(?value),"urn:uuid:") &amp;&amp; (CONTAINS(str(?value),"#_") || STRLEN(STRAFTER(str(?value),"#"))&lt;=1) &amp;&amp;
        #      !CONTAINS(str(?value),"FullModel") &amp;&amp; !CONTAINS(str(?value),"DifferenceModel") ).  
        FILTER(isIRI(?value) &amp;&amp; (CONTAINS(?strvalue,"#_") || STRSTARTS(?strvalue,"urn:uuid:") || STRENDS(?strvalue,"#"))).              
        #OPTIONAL{?value  rdf:type ?v}.
        #FILTER (!bound(?v) ).
        FILTER NOT EXISTS {?value rdf:type ?v }.
			}</sh:select>
  </rdf:Description>
  <rdf:Description rdf:about="#SvTapStep.position-SV__4">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyShape"/>
    <sh:sparql rdf:resource="#SvTapStep.position-SV__4Sparql"/>
    <sh:description>All state variables shall be instantiated in the SV instance file (distribution) for all energized elements part of a TopologicalIsland independently of the regulating status of the elements (e.g. for a shunt compensator that is not regulating the SvShuntCompensatorSections.sections shall be the same as ShuntCompensator.sections). All instances shall be representing computed values obtained from a power flow calculation. For SvPowerFlow instances refer to profile constraint on the SvPowerFlow class.</sh:description>
    <sh:name>C:600:SV:SvTapStep.position:SV__4</sh:name>
    <sh:group rdf:resource="#solvedMAS600Group"/>
    <sh:path rdf:resource="http://iec.ch/TC57/CIM100#TapChanger.step"/>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">7</sh:order>
    <sh:severity rdf:resource="http://www.w3.org/ns/shacl#Violation"/>
  </rdf:Description>
  <rdf:Description rdf:nodeID="A3">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PrefixDeclaration"/>
    <sh:namespace rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">http://iec.ch/TC57/CIM100-European#</sh:namespace>
    <sh:prefix>eu</sh:prefix>
  </rdf:Description>
  <rdf:Description rdf:about="#SvStatus-SV__4Sparql">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLConstraint"/>
    <sh:message>SvStatus is not instantiated for a ConductingEquipment connected to a TopologicalNode which is referenced by a TopologicalIsland.</sh:message>
    <sh:prefixes rdf:resource="http://iec.ch/TC57/CIM100#"/>
    <sh:select>
			SELECT  DISTINCT $this ?value 
			WHERE {
        $this cim:TopologicalIsland.TopologicalNodes ?tn.
        ?tn ^cim:ConnectivityNode.TopologicalNode/^cim:Terminal.ConnectivityNode/cim:Terminal.ConductingEquipment ?value.
        OPTIONAL {?value  ^cim:SvStatus.ConductingEquipment  ?svstatus} .
        #$this rdf:type ?value .
        #OPTIONAL {$this ^cim:Terminal.ConductingEquipment/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes ?topologicalisland }.
        #OPTIONAL {$this  ^cim:SvStatus.ConductingEquipment  ?svstatus} .
        #FILTER (bound(?topologicalisland) &amp;&amp; !bound(?svstatus) &amp;&amp; ?value!=cim:Equipment ).
        FILTER (!bound(?svstatus) &amp;&amp; ?value!=cim:Equipment ).
			}</sh:select>
  </rdf:Description>
  <rdf:Description rdf:about="#SvTapStep-SV__4Sparql">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLConstraint"/>
    <sh:message>SvTapStep is not instantiated for a RatioTapChanger or PhaseTapChanger (or any of the subtypes)  connected to a TopologicalNode which is referenced by a TopologicalIsland.</sh:message>
    <sh:prefixes rdf:resource="http://iec.ch/TC57/CIM100#"/>
    <sh:select>
			SELECT  DISTINCT $this ?value 
			WHERE {
        $this (cim:RatioTapChanger.TransformerEnd/cim:TransformerEnd.PowerTransformer/^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService)|(cim:PhaseTapChanger.TransformerEnd/cim:TransformerEnd.PowerTransformer/^cim:SvStatus.ConductingEquipment/cim:SvStatus.inService) true .
        $this  (cim:RatioTapChanger.TransformerEnd/cim:TransformerEnd.Terminal/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes)|(cim:PhaseTapChanger.TransformerEnd/cim:TransformerEnd.Terminal/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes)  ?topologicalisland .
        $this rdf:type ?value .
        #OPTIONAL {$this cim:RatioTapChanger.TransformerEnd/cim:TransformerEnd.Terminal/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes ?topologicalisland }.
        #OPTIONAL {$this cim:PhaseTapChanger.TransformerEnd/cim:TransformerEnd.Terminal/cim:Terminal.ConnectivityNode/cim:ConnectivityNode.TopologicalNode/^cim:TopologicalIsland.TopologicalNodes ?topologicalisland }.
        OPTIONAL {$this  ^cim:SvTapStep.TapChanger  ?svtapstep} .
        #FILTER (bound(?topologicalisland) &amp;&amp; !bound(?svtapstep)  ).
        FILTER (!bound(?svtapstep)  ).
			}</sh:select>
  </rdf:Description>
  <rdf:Description rdf:about="#solvedMAS600Group">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PropertyGroup"/>
    <rdfs:label>SolvedMAS600</rdfs:label>
    <sh:order rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">0</sh:order>
  </rdf:Description>
  <rdf:Description rdf:nodeID="A2">
    <rdf:type rdf:resource="http://www.w3.org/ns/shacl#PrefixDeclaration"/>
    <sh:namespace rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">http://iec.ch/TC57/61970-552/ModelDescription/1#</sh:namespace>
    <sh:prefix>md</sh:prefix>
  </rdf:Description>
</rdf:RDF>
