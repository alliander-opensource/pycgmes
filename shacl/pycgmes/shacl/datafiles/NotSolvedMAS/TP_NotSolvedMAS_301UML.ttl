@base          <http://iec.ch/TC57/ns/CIM/Topology-EU/constraints/IEC61970-301/notSolved/3.0> .
@prefix eu:    <http://iec.ch/TC57/CIM100-European#> .
@prefix cims:  <http://iec.ch/TC57/1999/rdf-schema-extensions-19990926#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix cim:   <http://iec.ch/TC57/CIM100#> .
@prefix tpn301:  <http://iec.ch/TC57/ns/CIM/Topology-EU/constraints/IEC61970-301/notSolved/3.0#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dash:  <http://datashapes.org/dash#> .
@prefix dct:    <http://purl.org/dc/terms/> .
@prefix dcat:    <http://www.w3.org/ns/dcat#> .

tpn301:Ontology  rdf:type         owl:Ontology ;
        dct:conformsTo        "urn:iso:std:iec:61970-501:draft:ed-2" , "urn:iso:std:iec:61970-600-2:ed-1" , "urn:iso:std:iec:61970-301:ed-7:amd1" , "file://iec61970cim17v40_iec61968cim13v13a_iec62325cim03v17a.eap" ;
        dct:creator           "ENTSO-E CIM EG"@en ;
        dct:description       "The constraints for TP."@en ;
        dct:identifier        "urn:uuid:878fb944-7e5a-46b1-bf99-78dba12b9aba" ;
        dct:issued            "2021-10-19T12:09:21Z"^^xsd:dateTime ;
        dct:language          "en-GB" ;
        dct:modified          "2020-10-19"^^xsd:date ;
        dct:publisher         "ENTSO-E"@en ;
        dct:rights            "Copyright"@en ;
        dct:rightsHolder      "ENTSO-E"@en ;
        dct:title             "TP not solved MAS Constraints"@en ;
        owl:versionIRI        <http://iec.ch/TC57/ns/CIM/Topology-EU/constraints/IEC61970-301/notSolved/3.0> ;
        owl:versionInfo       "3.0.0"@en ;
        dcat:landingPage      "https://www.entsoe.eu/digital/cim/cim-for-grid-models-exchange/" ;
        dcat:theme            "constraints"@en .

cim:    
    a           owl:Ontology ;
    owl:imports sh: ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100#"^^xsd:anyURI ;
        sh:prefix "cim" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
        sh:prefix "rdf" ;
    ] ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "http://iec.ch/TC57/CIM100-European#"^^xsd:anyURI ;
        sh:prefix "eu" ;
    ] .

tpn301:IGMTPunsolved301Group
        a           sh:PropertyGroup ;
        rdfs:label  "NotSolvedMASTP301" ;
        sh:order    0 .

tpn301:Terminal.phases
        a               sh:NodeShape ;
        sh:property     tpn301:Terminal.phases-consistencyTopologicalNode ;
        sh:targetClass  cim:TopologicalNode .

tpn301:Terminal.phases-consistencyTopologicalNode
        a               sh:PropertyShape ;
        sh:sparql       tpn301:Terminal.phases-consistencyTopologicalNodeSparql ;
        sh:path         rdf:type ;
        sh:description  "The phase code on terminals connecting same ConnectivityNode or same TopologicalNode as well as for equipment between two terminals shall be consistent." ;
        sh:name         "C:301:TP:Terminal.phases:consistencyTopologicalNode" ;
        sh:order        1 ;
        sh:group        tpn301:IGMTPunsolved301Group ;
        sh:severity     sh:Violation .                 

   
tpn301:Terminal.phases-consistencyTopologicalNodeSparql
		a         sh:SPARQLConstraint ;  
		sh:message      "The phase codes for the connected terminals are not consistent. Terminal 1 code:{?value1} Terminal 2 code: {?value2}." ;
		sh:prefixes cim: ;
		sh:select """
			SELECT  $this ?value2 ?terms ?value1 ?value
			WHERE {
        {
        SELECT $this (COUNT(?typeterm) AS ?terms) ?value
        WHERE {
        $this ^cim:Terminal.TopologicalNode  ?value.
        ?value rdf:type ?typeterm .
        #FILTER (?typeterm=cim:Terminal).
        }
        GROUP BY $this ?typeterm ?value
        HAVING (?terms>1)
        }
      
        $this ^cim:Terminal.TopologicalNode ?term2  .
        ?value cim:Terminal.phases ?value1  .
        OPTIONAL {?term2 cim:Terminal.phases ?value2 } .
        
        #?term1 cim:Terminal.TopologicalNode $this  .
        #OPTIONAL {?term1 cim:Terminal.phases ?value2 } .
        #?term2 cim:Terminal.TopologicalNode $this  .
        #OPTIONAL {?term2 cim:Terminal.phases ?value1 } .        
        #FILTER ((?terms>1 && bound(?value2) && ?term1!=?term2 && (?value1=cim:PhaseCode.ABCN || ?value1=cim:PhaseCode.N) && (?value2!=cim:PhaseCode.ABCN && ?value2!=cim:PhaseCode.N)) ||
        #(?terms>1 && bound(?value2) && ?term1!=?term2 && (?value1=cim:PhaseCode.ABC) && (?value2!=cim:PhaseCode.ABC)) ||
        #(?terms>1 && !bound(?value2) && ?term1!=?term2 && (?value1=cim:PhaseCode.ABCN || ?value1=cim:PhaseCode.N))
        #) .
        FILTER ((?value!=?term2 && bound(?value2) && (?value1=cim:PhaseCode.ABCN || ?value1=cim:PhaseCode.N) && (?value2!=cim:PhaseCode.ABCN && ?value2!=cim:PhaseCode.N)) ||
        (?value!=?term2 && bound(?value2) && (?value1=cim:PhaseCode.ABC) && (?value2!=cim:PhaseCode.ABC)) ||
        (?value!=?term2 && !bound(?value2) && (?value1=cim:PhaseCode.ABCN || ?value1=cim:PhaseCode.N))
        ) .
			}""" .                   
                